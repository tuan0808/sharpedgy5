{
  "version": 3,
  "sources": ["../../../../../../node_modules/angular-gridster2/fesm2022/angular-gridster2.mjs"],
  "sourcesContent": ["import { NgStyle } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, Input, EventEmitter, ElementRef, Renderer2, ChangeDetectorRef, NgZone, Inject, Output, HostBinding, NgModule } from '@angular/core';\nimport { Subject, debounceTime, takeUntil, switchMap, timer } from 'rxjs';\nconst _c0 = [\"*\"];\nfunction GridsterComponent_For_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 0);\n  }\n  if (rf & 2) {\n    const ɵ$index_1_r1 = ctx.$index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", ctx_r1.gridRenderer.getGridColumnStyle(ɵ$index_1_r1));\n  }\n}\nfunction GridsterComponent_For_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 1);\n  }\n  if (rf & 2) {\n    const ɵ$index_4_r3 = ctx.$index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", ctx_r1.gridRenderer.getGridRowStyle(ɵ$index_4_r3));\n  }\n}\nfunction GridsterItemComponent_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵlistener(\"mousedown\", function GridsterItemComponent_Conditional_1_Template_div_mousedown_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.resize.dragStartDelay($event));\n    })(\"touchstart\", function GridsterItemComponent_Conditional_1_Template_div_touchstart_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.resize.dragStartDelay($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GridsterItemComponent_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵlistener(\"mousedown\", function GridsterItemComponent_Conditional_2_Template_div_mousedown_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.resize.dragStartDelay($event));\n    })(\"touchstart\", function GridsterItemComponent_Conditional_2_Template_div_touchstart_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.resize.dragStartDelay($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GridsterItemComponent_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵlistener(\"mousedown\", function GridsterItemComponent_Conditional_3_Template_div_mousedown_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.resize.dragStartDelay($event));\n    })(\"touchstart\", function GridsterItemComponent_Conditional_3_Template_div_touchstart_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.resize.dragStartDelay($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GridsterItemComponent_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵlistener(\"mousedown\", function GridsterItemComponent_Conditional_4_Template_div_mousedown_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.resize.dragStartDelay($event));\n    })(\"touchstart\", function GridsterItemComponent_Conditional_4_Template_div_touchstart_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.resize.dragStartDelay($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GridsterItemComponent_Conditional_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵlistener(\"mousedown\", function GridsterItemComponent_Conditional_5_Template_div_mousedown_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.resize.dragStartDelay($event));\n    })(\"touchstart\", function GridsterItemComponent_Conditional_5_Template_div_touchstart_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.resize.dragStartDelay($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GridsterItemComponent_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵlistener(\"mousedown\", function GridsterItemComponent_Conditional_6_Template_div_mousedown_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.resize.dragStartDelay($event));\n    })(\"touchstart\", function GridsterItemComponent_Conditional_6_Template_div_touchstart_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.resize.dragStartDelay($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GridsterItemComponent_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵlistener(\"mousedown\", function GridsterItemComponent_Conditional_7_Template_div_mousedown_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.resize.dragStartDelay($event));\n    })(\"touchstart\", function GridsterItemComponent_Conditional_7_Template_div_touchstart_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.resize.dragStartDelay($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GridsterItemComponent_Conditional_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵlistener(\"mousedown\", function GridsterItemComponent_Conditional_8_Template_div_mousedown_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.resize.dragStartDelay($event));\n    })(\"touchstart\", function GridsterItemComponent_Conditional_8_Template_div_touchstart_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.resize.dragStartDelay($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nvar GridType;\n(function (GridType) {\n  GridType[\"Fit\"] = \"fit\";\n  GridType[\"ScrollVertical\"] = \"scrollVertical\";\n  GridType[\"ScrollHorizontal\"] = \"scrollHorizontal\";\n  GridType[\"Fixed\"] = \"fixed\";\n  GridType[\"VerticalFixed\"] = \"verticalFixed\";\n  GridType[\"HorizontalFixed\"] = \"horizontalFixed\";\n})(GridType || (GridType = {}));\nvar DisplayGrid;\n(function (DisplayGrid) {\n  DisplayGrid[\"Always\"] = \"always\";\n  DisplayGrid[\"OnDragAndResize\"] = \"onDrag&Resize\";\n  DisplayGrid[\"None\"] = \"none\";\n})(DisplayGrid || (DisplayGrid = {}));\nvar CompactType;\n(function (CompactType) {\n  CompactType[\"None\"] = \"none\";\n  CompactType[\"CompactUp\"] = \"compactUp\";\n  CompactType[\"CompactLeft\"] = \"compactLeft\";\n  CompactType[\"CompactUpAndLeft\"] = \"compactUp&Left\";\n  CompactType[\"CompactLeftAndUp\"] = \"compactLeft&Up\";\n  CompactType[\"CompactRight\"] = \"compactRight\";\n  CompactType[\"CompactUpAndRight\"] = \"compactUp&Right\";\n  CompactType[\"CompactRightAndUp\"] = \"compactRight&Up\";\n  CompactType[\"CompactDown\"] = \"compactDown\";\n  CompactType[\"CompactDownAndLeft\"] = \"compactDown&Left\";\n  CompactType[\"CompactLeftAndDown\"] = \"compactLeft&Down\";\n  CompactType[\"CompactDownAndRight\"] = \"compactDown&Right\";\n  CompactType[\"CompactRightAndDown\"] = \"compactRight&Down\";\n})(CompactType || (CompactType = {}));\nvar DirTypes;\n(function (DirTypes) {\n  DirTypes[\"LTR\"] = \"ltr\";\n  DirTypes[\"RTL\"] = \"rtl\";\n})(DirTypes || (DirTypes = {}));\nclass GridsterCompact {\n  constructor(gridster) {\n    this.gridster = gridster;\n  }\n  destroy() {\n    this.gridster = null;\n  }\n  checkCompact() {\n    if (this.gridster.$options.compactType !== CompactType.None) {\n      if (this.gridster.$options.compactType === CompactType.CompactUp) {\n        this.checkCompactMovement('y', -1);\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeft) {\n        this.checkCompactMovement('x', -1);\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndLeft) {\n        this.checkCompactMovement('y', -1);\n        this.checkCompactMovement('x', -1);\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeftAndUp) {\n        this.checkCompactMovement('x', -1);\n        this.checkCompactMovement('y', -1);\n      } else if (this.gridster.$options.compactType === CompactType.CompactRight) {\n        this.checkCompactMovement('x', 1);\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndRight) {\n        this.checkCompactMovement('y', -1);\n        this.checkCompactMovement('x', 1);\n      } else if (this.gridster.$options.compactType === CompactType.CompactRightAndUp) {\n        this.checkCompactMovement('x', 1);\n        this.checkCompactMovement('y', -1);\n      } else if (this.gridster.$options.compactType === CompactType.CompactDown) {\n        this.checkCompactMovement('y', 1);\n      } else if (this.gridster.$options.compactType === CompactType.CompactDownAndLeft) {\n        this.checkCompactMovement('y', 1);\n        this.checkCompactMovement('x', -1);\n      } else if (this.gridster.$options.compactType === CompactType.CompactDownAndRight) {\n        this.checkCompactMovement('y', 1);\n        this.checkCompactMovement('x', 1);\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeftAndDown) {\n        this.checkCompactMovement('x', -1);\n        this.checkCompactMovement('y', 1);\n      } else if (this.gridster.$options.compactType === CompactType.CompactRightAndDown) {\n        this.checkCompactMovement('x', 1);\n        this.checkCompactMovement('y', 1);\n      }\n    }\n  }\n  checkCompactItem(item) {\n    if (this.gridster.$options.compactType !== CompactType.None) {\n      if (this.gridster.$options.compactType === CompactType.CompactUp) {\n        this.moveTillCollision(item, 'y', -1);\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeft) {\n        this.moveTillCollision(item, 'x', -1);\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndLeft) {\n        this.moveTillCollision(item, 'y', -1);\n        this.moveTillCollision(item, 'x', -1);\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeftAndUp) {\n        this.moveTillCollision(item, 'x', -1);\n        this.moveTillCollision(item, 'y', -1);\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndRight) {\n        this.moveTillCollision(item, 'y', -1);\n        this.moveTillCollision(item, 'x', 1);\n      } else if (this.gridster.$options.compactType === CompactType.CompactDown) {\n        this.moveTillCollision(item, 'y', 1);\n      } else if (this.gridster.$options.compactType === CompactType.CompactDownAndLeft) {\n        this.moveTillCollision(item, 'y', 1);\n        this.moveTillCollision(item, 'x', -1);\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeftAndDown) {\n        this.moveTillCollision(item, 'x', -1);\n        this.moveTillCollision(item, 'y', 1);\n      } else if (this.gridster.$options.compactType === CompactType.CompactDownAndRight) {\n        this.moveTillCollision(item, 'y', 1);\n        this.moveTillCollision(item, 'x', 1);\n      } else if (this.gridster.$options.compactType === CompactType.CompactRightAndDown) {\n        this.moveTillCollision(item, 'x', 1);\n        this.moveTillCollision(item, 'y', 1);\n      }\n    }\n  }\n  checkCompactMovement(direction, delta) {\n    let widgetMoved = false;\n    this.gridster.grid.forEach(widget => {\n      if (widget.$item.compactEnabled !== false) {\n        const moved = this.moveTillCollision(widget.$item, direction, delta);\n        if (moved) {\n          widgetMoved = true;\n          widget.item[direction] = widget.$item[direction];\n          widget.itemChanged();\n        }\n      }\n    });\n    if (widgetMoved) {\n      this.checkCompact();\n    }\n  }\n  moveTillCollision(item, direction, delta) {\n    item[direction] += delta;\n    if (this.gridster.checkCollision(item)) {\n      item[direction] -= delta;\n      return false;\n    } else {\n      this.moveTillCollision(item, direction, delta);\n      return true;\n    }\n  }\n}\nconst GridsterConfigService = {\n  gridType: GridType.Fit,\n  // 'fit' will fit the items in the container without scroll;\n  scale: 1,\n  // scale param to zoom in/zoom out\n  // 'scrollVertical' will fit on width and height of the items will be the same as the width\n  // 'scrollHorizontal' will fit on height and width of the items will be the same as the height\n  // 'fixed' will set the rows and columns dimensions based on fixedColWidth and fixedRowHeight options\n  // 'verticalFixed' will set the rows to fixedRowHeight and columns width will fit the space available\n  // 'horizontalFixed' will set the columns to fixedColWidth and rows height will fit the space available\n  fixedColWidth: 250,\n  // fixed col width for gridType: 'fixed'\n  fixedRowHeight: 250,\n  // fixed row height for gridType: 'fixed'\n  keepFixedHeightInMobile: false,\n  // keep the height from fixed gridType in mobile layout\n  keepFixedWidthInMobile: false,\n  // keep the width from fixed gridType in mobile layout\n  setGridSize: false,\n  // sets grid size depending on content\n  compactType: CompactType.None,\n  // compact items: 'none' | 'compactUp' | 'compactLeft' | 'compactUp&Left' | 'compactLeft&Up'\n  mobileBreakpoint: 640,\n  // if the screen is not wider that this, remove the grid layout and stack the items\n  useBodyForBreakpoint: false,\n  // whether to use the body width to determine the mobile breakpoint. Uses the element width when false.\n  allowMultiLayer: false,\n  defaultLayerIndex: 0,\n  maxLayerIndex: 2,\n  baseLayerIndex: 1,\n  minCols: 1,\n  // minimum amount of columns in the grid\n  maxCols: 100,\n  // maximum amount of columns in the grid\n  minRows: 1,\n  // minimum amount of rows in the grid\n  maxRows: 100,\n  // maximum amount of rows in the grid\n  defaultItemCols: 1,\n  // default width of an item in columns\n  defaultItemRows: 1,\n  // default height of an item in rows\n  maxItemCols: 50,\n  // max item number of cols\n  maxItemRows: 50,\n  // max item number of rows\n  minItemCols: 1,\n  // min item number of columns\n  minItemRows: 1,\n  // min item number of rows\n  minItemArea: 1,\n  // min item area: cols * rows\n  maxItemArea: 2500,\n  // max item area: cols * rows\n  addEmptyRowsCount: 0,\n  // add a number of extra empty rows at the end\n  rowHeightRatio: 1,\n  // row height ratio from column width\n  margin: 10,\n  // margin between grid items\n  outerMargin: true,\n  // if margins will apply to the sides of the container\n  outerMarginTop: null,\n  // override outer margin for grid\n  outerMarginRight: null,\n  // override outer margin for grid\n  outerMarginBottom: null,\n  // override outer margin for grid\n  outerMarginLeft: null,\n  // override outer margin for grid\n  useTransformPositioning: true,\n  // toggle between transform or top/left positioning of items\n  scrollSensitivity: 10,\n  // margin of the dashboard where to start scrolling\n  scrollSpeed: 20,\n  // how much to scroll each mouse move when in the scrollSensitivity zone\n  initCallback: undefined,\n  // callback to call after grid has initialized. Arguments: gridsterComponent\n  destroyCallback: undefined,\n  // callback to call after grid has destroyed. Arguments: gridsterComponent\n  gridSizeChangedCallback: undefined,\n  // callback to call after grid has changed size. Arguments: gridsterComponent\n  itemChangeCallback: undefined,\n  // callback to call for each item when is changes x, y, rows, cols.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemResizeCallback: undefined,\n  // callback to call for each item when width/height changes.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemInitCallback: undefined,\n  // callback to call for each item when is initialized.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemRemovedCallback: undefined,\n  // callback to call for each item when is initialized.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemValidateCallback: undefined,\n  // callback to call to validate item position/size. Return true if valid.\n  // Arguments: gridsterItem\n  enableEmptyCellClick: false,\n  // enable empty cell click events\n  enableEmptyCellContextMenu: false,\n  // enable empty cell context menu (right click) events\n  enableEmptyCellDrop: false,\n  // enable empty cell drop events\n  enableEmptyCellDrag: false,\n  // enable empty cell drag events\n  enableOccupiedCellDrop: false,\n  // enable occupied cell drop events\n  emptyCellClickCallback: undefined,\n  // empty cell click callback\n  emptyCellContextMenuCallback: undefined,\n  // empty cell context menu (right click) callback\n  emptyCellDropCallback: undefined,\n  // empty cell drag drop callback. HTML5 Drag & Drop\n  emptyCellDragCallback: undefined,\n  // empty cell drag and create item like excel cell selection\n  emptyCellDragMaxCols: 50,\n  // limit empty cell drag max cols\n  emptyCellDragMaxRows: 50,\n  // limit empty cell drag max rows\n  // Arguments: event, gridsterItem{x, y, rows: defaultItemRows, cols: defaultItemCols}\n  ignoreMarginInRow: false,\n  // ignore the gap between rows for items which span multiple rows (see #162, #224)\n  draggable: {\n    delayStart: 0,\n    // milliseconds to delay the start of drag, useful for touch interaction\n    enabled: false,\n    // enable/disable draggable items\n    ignoreContentClass: 'gridster-item-content',\n    // default content class to ignore the drag event from\n    ignoreContent: false,\n    // if true drag will start only from elements from `dragHandleClass`\n    dragHandleClass: 'drag-handler',\n    // drag event only from this class. If `ignoreContent` is true.\n    stop: undefined,\n    // callback when dragging an item stops.  Accepts Promise return to cancel/approve drag.\n    start: undefined,\n    // callback when dragging an item starts.\n    // Arguments: item, gridsterItem, event\n    dropOverItems: false,\n    // enable drop items on top other item\n    dropOverItemsCallback: undefined // callback on drop over another item\n    // Arguments: source, target, gridComponent\n  },\n  resizable: {\n    delayStart: 0,\n    // milliseconds to delay the start of resize, useful for touch interaction\n    enabled: false,\n    // enable/disable resizable items\n    handles: {\n      s: true,\n      e: true,\n      n: true,\n      w: true,\n      se: true,\n      ne: true,\n      sw: true,\n      nw: true\n    },\n    // resizable edges of an item\n    stop: undefined,\n    // callback when resizing an item stops. Accepts Promise return to cancel/approve resize.\n    start: undefined // callback when resizing an item starts.\n    // Arguments: item, gridsterItem, event\n  },\n  swap: true,\n  // allow items to switch position if drop on top of another\n  swapWhileDragging: false,\n  // allow items to switch position while dragging\n  pushItems: false,\n  // push items when resizing and dragging\n  disablePushOnDrag: false,\n  // disable push on drag\n  disablePushOnResize: false,\n  // disable push on resize\n  pushDirections: {\n    north: true,\n    east: true,\n    south: true,\n    west: true\n  },\n  // control the directions items are pushed\n  pushResizeItems: false,\n  // on resize of item will shrink adjacent items\n  displayGrid: DisplayGrid.OnDragAndResize,\n  // display background grid of rows and columns\n  disableWindowResize: false,\n  // disable the window on resize listener. This will stop grid to recalculate on window resize.\n  disableWarnings: false,\n  // disable console log warnings about misplacement of grid items\n  scrollToNewItems: false,\n  // scroll to new items placed in a scrollable view\n  disableScrollHorizontal: false,\n  // disable horizontal scrolling\n  disableScrollVertical: false,\n  // disable vertical scrolling\n  enableBoundaryControl: false,\n  // enable boundary control while dragging items\n  disableAutoPositionOnConflict: false,\n  // disable auto-position of items on conflict state,\n  dirType: DirTypes.LTR // page direction, rtl=right to left ltr= left to right, if you use rtl language set dirType to rtl\n};\nclass GridsterUtils {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static merge(obj1, obj2, properties) {\n    for (const p in obj2) {\n      if (obj2[p] !== void 0 && properties.hasOwnProperty(p)) {\n        if (typeof obj2[p] === 'object') {\n          // create an empty object for the property if obj1 does not already have one.\n          if (!(p in obj1)) {\n            obj1[p] = {};\n          }\n          obj1[p] = GridsterUtils.merge(obj1[p], obj2[p], properties[p]);\n        } else {\n          obj1[p] = obj2[p];\n        }\n      }\n    }\n    return obj1;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static checkTouchEvent(e) {\n    if (e.clientX === undefined && e.touches) {\n      if (e.touches && e.touches.length) {\n        e.clientX = e.touches[0].clientX;\n        e.clientY = e.touches[0].clientY;\n      } else if (e.changedTouches && e.changedTouches.length) {\n        e.clientX = e.changedTouches[0].clientX;\n        e.clientY = e.changedTouches[0].clientY;\n      }\n    }\n  }\n  static checkContentClassForEvent(gridster, e) {\n    if (gridster.$options.draggable.ignoreContent) {\n      if (!GridsterUtils.checkDragHandleClass(e.target, e.currentTarget, gridster.$options.draggable.dragHandleClass, gridster.$options.draggable.ignoreContentClass)) {\n        return true;\n      }\n    } else {\n      if (GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.ignoreContentClass)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  static checkContentClassForEmptyCellClickEvent(gridster, e) {\n    return GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.ignoreContentClass) || GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.dragHandleClass);\n  }\n  static checkDragHandleClass(target, current, dragHandleClass, ignoreContentClass) {\n    if (!target || target === current) {\n      return false;\n    }\n    if (target.hasAttribute('class')) {\n      const classnames = target.getAttribute('class').split(' ');\n      if (classnames.indexOf(dragHandleClass) > -1) {\n        return true;\n      }\n      if (classnames.indexOf(ignoreContentClass) > -1) {\n        return false;\n      }\n    }\n    return GridsterUtils.checkDragHandleClass(target.parentNode, current, dragHandleClass, ignoreContentClass);\n  }\n  static checkContentClass(target, current, contentClass) {\n    if (!target || target === current) {\n      return false;\n    }\n    if (target.hasAttribute('class') && target.getAttribute('class').split(' ').indexOf(contentClass) > -1) {\n      return true;\n    } else {\n      return GridsterUtils.checkContentClass(target.parentNode, current, contentClass);\n    }\n  }\n  static compareItems(a, b) {\n    if (a.y > b.y) {\n      return -1;\n    } else if (a.y < b.y) {\n      return 1;\n    } else if (a.x > b.x) {\n      return -1;\n    } else {\n      return 1;\n    }\n  }\n}\nclass GridsterEmptyCell {\n  constructor(gridster) {\n    this.gridster = gridster;\n    this.emptyCellClickCb = e => {\n      if (!this.gridster || this.gridster.movingItem || GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\n        return;\n      }\n      const item = this.getValidItemFromEvent(e);\n      if (!item) {\n        return;\n      }\n      if (this.gridster.options.emptyCellClickCallback) {\n        this.gridster.options.emptyCellClickCallback(e, item);\n      }\n      this.gridster.cdRef.markForCheck();\n    };\n    this.emptyCellContextMenuCb = e => {\n      if (this.gridster.movingItem || GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\n        return;\n      }\n      e.preventDefault();\n      e.stopPropagation();\n      const item = this.getValidItemFromEvent(e);\n      if (!item) {\n        return;\n      }\n      if (this.gridster.options.emptyCellContextMenuCallback) {\n        this.gridster.options.emptyCellContextMenuCallback(e, item);\n      }\n      this.gridster.cdRef.markForCheck();\n    };\n    this.emptyCellDragDrop = e => {\n      const item = this.getValidItemFromEvent(e);\n      if (!item) {\n        return;\n      }\n      if (this.gridster.options.emptyCellDropCallback) {\n        this.gridster.options.emptyCellDropCallback(e, item);\n      }\n      this.gridster.cdRef.markForCheck();\n    };\n    this.emptyCellDragOver = e => {\n      e.preventDefault();\n      e.stopPropagation();\n      const item = this.getValidItemFromEvent(e);\n      if (item) {\n        if (e.dataTransfer) {\n          e.dataTransfer.dropEffect = 'move';\n        }\n        this.gridster.movingItem = item;\n      } else {\n        if (e.dataTransfer) {\n          e.dataTransfer.dropEffect = 'none';\n        }\n        this.gridster.movingItem = null;\n      }\n      this.gridster.previewStyle();\n    };\n    this.emptyCellMouseDown = e => {\n      if (GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\n        return;\n      }\n      e.preventDefault();\n      e.stopPropagation();\n      const item = this.getValidItemFromEvent(e);\n      const leftMouseButtonCode = 1;\n      if (!item || e.buttons !== leftMouseButtonCode && !(e instanceof TouchEvent)) {\n        return;\n      }\n      this.initialItem = item;\n      this.gridster.movingItem = item;\n      this.gridster.previewStyle();\n      this.gridster.zone.runOutsideAngular(() => {\n        this.removeWindowMousemoveListenerFn = this.gridster.renderer.listen('window', 'mousemove', this.emptyCellMouseMove);\n        this.removeWindowTouchmoveListenerFn = this.gridster.renderer.listen('window', 'touchmove', this.emptyCellMouseMove);\n      });\n      this.removeWindowMouseupListenerFn = this.gridster.renderer.listen('window', 'mouseup', this.emptyCellMouseUp);\n      this.removeWindowTouchendListenerFn = this.gridster.renderer.listen('window', 'touchend', this.emptyCellMouseUp);\n    };\n    this.emptyCellMouseMove = e => {\n      e.preventDefault();\n      e.stopPropagation();\n      const item = this.getValidItemFromEvent(e, this.initialItem);\n      if (!item) {\n        return;\n      }\n      this.gridster.movingItem = item;\n      this.gridster.previewStyle();\n    };\n    this.emptyCellMouseUp = e => {\n      this.removeWindowMousemoveListenerFn();\n      this.removeWindowTouchmoveListenerFn();\n      this.removeWindowMouseupListenerFn();\n      this.removeWindowTouchendListenerFn();\n      const item = this.getValidItemFromEvent(e, this.initialItem);\n      if (item) {\n        this.gridster.movingItem = item;\n      }\n      if (this.gridster.options.emptyCellDragCallback && this.gridster.movingItem) {\n        this.gridster.options.emptyCellDragCallback(e, this.gridster.movingItem);\n      }\n      setTimeout(() => {\n        this.initialItem = null;\n        if (this.gridster) {\n          this.gridster.movingItem = null;\n          this.gridster.previewStyle();\n        }\n      });\n      this.gridster.cdRef.markForCheck();\n    };\n  }\n  destroy() {\n    if (this.gridster.previewStyle) {\n      this.gridster.previewStyle();\n    }\n    this.gridster.movingItem = null;\n    this.initialItem = this.gridster = null;\n    if (this.removeDocumentDragendListenerFn) {\n      this.removeDocumentDragendListenerFn();\n      this.removeDocumentDragendListenerFn = null;\n    }\n  }\n  updateOptions() {\n    if (this.gridster.$options.enableEmptyCellClick && !this.removeEmptyCellClickListenerFn && this.gridster.options.emptyCellClickCallback) {\n      this.removeEmptyCellClickListenerFn = this.gridster.renderer.listen(this.gridster.el, 'click', this.emptyCellClickCb);\n      this.removeEmptyCellTouchendListenerFn = this.gridster.renderer.listen(this.gridster.el, 'touchend', this.emptyCellClickCb);\n    } else if (!this.gridster.$options.enableEmptyCellClick && this.removeEmptyCellClickListenerFn && this.removeEmptyCellTouchendListenerFn) {\n      this.removeEmptyCellClickListenerFn();\n      this.removeEmptyCellTouchendListenerFn();\n      this.removeEmptyCellClickListenerFn = null;\n      this.removeEmptyCellTouchendListenerFn = null;\n    }\n    if (this.gridster.$options.enableEmptyCellContextMenu && !this.removeEmptyCellContextMenuListenerFn && this.gridster.options.emptyCellContextMenuCallback) {\n      this.removeEmptyCellContextMenuListenerFn = this.gridster.renderer.listen(this.gridster.el, 'contextmenu', this.emptyCellContextMenuCb);\n    } else if (!this.gridster.$options.enableEmptyCellContextMenu && this.removeEmptyCellContextMenuListenerFn) {\n      this.removeEmptyCellContextMenuListenerFn();\n      this.removeEmptyCellContextMenuListenerFn = null;\n    }\n    if (this.gridster.$options.enableEmptyCellDrop && !this.removeEmptyCellDropListenerFn && this.gridster.options.emptyCellDropCallback) {\n      this.removeEmptyCellDropListenerFn = this.gridster.renderer.listen(this.gridster.el, 'drop', this.emptyCellDragDrop);\n      this.gridster.zone.runOutsideAngular(() => {\n        this.removeEmptyCellDragoverListenerFn = this.gridster.renderer.listen(this.gridster.el, 'dragover', this.emptyCellDragOver);\n      });\n      this.removeDocumentDragendListenerFn = this.gridster.renderer.listen('document', 'dragend', () => {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle();\n      });\n    } else if (!this.gridster.$options.enableEmptyCellDrop && this.removeEmptyCellDropListenerFn && this.removeEmptyCellDragoverListenerFn && this.removeDocumentDragendListenerFn) {\n      this.removeEmptyCellDropListenerFn();\n      this.removeEmptyCellDragoverListenerFn();\n      this.removeDocumentDragendListenerFn();\n      this.removeEmptyCellDragoverListenerFn = null;\n      this.removeEmptyCellDropListenerFn = null;\n      this.removeDocumentDragendListenerFn = null;\n    }\n    if (this.gridster.$options.enableEmptyCellDrag && !this.removeEmptyCellMousedownListenerFn && this.gridster.options.emptyCellDragCallback) {\n      this.removeEmptyCellMousedownListenerFn = this.gridster.renderer.listen(this.gridster.el, 'mousedown', this.emptyCellMouseDown);\n      this.removeEmptyCellTouchstartListenerFn = this.gridster.renderer.listen(this.gridster.el, 'touchstart', this.emptyCellMouseDown);\n    } else if (!this.gridster.$options.enableEmptyCellDrag && this.removeEmptyCellMousedownListenerFn && this.removeEmptyCellTouchstartListenerFn) {\n      this.removeEmptyCellMousedownListenerFn();\n      this.removeEmptyCellTouchstartListenerFn();\n      this.removeEmptyCellMousedownListenerFn = null;\n      this.removeEmptyCellTouchstartListenerFn = null;\n    }\n  }\n  getPixelsX(e, rect) {\n    const scale = this.gridster.options.scale;\n    if (scale) {\n      return (e.clientX - rect.left) / scale + this.gridster.el.scrollLeft - this.gridster.gridRenderer.getLeftMargin();\n    }\n    return e.clientX + this.gridster.el.scrollLeft - rect.left - this.gridster.gridRenderer.getLeftMargin();\n  }\n  getPixelsY(e, rect) {\n    const scale = this.gridster.options.scale;\n    if (scale) {\n      return (e.clientY - rect.top) / scale + this.gridster.el.scrollTop - this.gridster.gridRenderer.getTopMargin();\n    }\n    return e.clientY + this.gridster.el.scrollTop - rect.top - this.gridster.gridRenderer.getTopMargin();\n  }\n  getValidItemFromEvent(e, oldItem) {\n    e.preventDefault();\n    e.stopPropagation();\n    GridsterUtils.checkTouchEvent(e);\n    const rect = this.gridster.el.getBoundingClientRect();\n    const x = this.getPixelsX(e, rect);\n    const y = this.getPixelsY(e, rect);\n    const item = {\n      x: this.gridster.pixelsToPositionX(x, Math.floor, true),\n      y: this.gridster.pixelsToPositionY(y, Math.floor, true),\n      cols: this.gridster.$options.defaultItemCols,\n      rows: this.gridster.$options.defaultItemRows\n    };\n    if (oldItem) {\n      item.cols = Math.min(Math.abs(oldItem.x - item.x) + 1, this.gridster.$options.emptyCellDragMaxCols);\n      item.rows = Math.min(Math.abs(oldItem.y - item.y) + 1, this.gridster.$options.emptyCellDragMaxRows);\n      if (oldItem.x < item.x) {\n        item.x = oldItem.x;\n      } else if (oldItem.x - item.x > this.gridster.$options.emptyCellDragMaxCols - 1) {\n        item.x = this.gridster.movingItem ? this.gridster.movingItem.x : 0;\n      }\n      if (oldItem.y < item.y) {\n        item.y = oldItem.y;\n      } else if (oldItem.y - item.y > this.gridster.$options.emptyCellDragMaxRows - 1) {\n        item.y = this.gridster.movingItem ? this.gridster.movingItem.y : 0;\n      }\n    }\n    if (!this.gridster.$options.enableOccupiedCellDrop && this.gridster.checkCollision(item)) {\n      return;\n    }\n    return item;\n  }\n}\nclass GridsterRenderer {\n  constructor(gridster) {\n    this.gridster = gridster;\n    /**\n     * Caches the last grid column styles.\n     * This improves the grid responsiveness by caching and reusing the last style object instead of creating a new one.\n     */\n    this.lastGridColumnStyles = {};\n    /**\n     * Caches the last grid column styles.\n     * This improves the grid responsiveness by caching and reusing the last style object instead of creating a new one.\n     */\n    this.lastGridRowStyles = {};\n  }\n  destroy() {\n    this.gridster = null;\n  }\n  updateItem(el, item, renderer) {\n    if (this.gridster.mobile) {\n      this.clearCellPosition(renderer, el);\n      if (this.gridster.$options.keepFixedHeightInMobile) {\n        renderer.setStyle(el, 'height', (item.rows - 1) * this.gridster.$options.margin + item.rows * this.gridster.$options.fixedRowHeight + 'px');\n      } else {\n        renderer.setStyle(el, 'height', item.rows * this.gridster.curWidth / item.cols + 'px');\n      }\n      if (this.gridster.$options.keepFixedWidthInMobile) {\n        renderer.setStyle(el, 'width', this.gridster.$options.fixedColWidth + 'px');\n      } else {\n        renderer.setStyle(el, 'width', '');\n      }\n      renderer.setStyle(el, 'margin-bottom', this.gridster.$options.margin + 'px');\n      renderer.setStyle(el, DirTypes.LTR ? 'margin-right' : 'margin-left', '');\n    } else {\n      const x = Math.round(this.gridster.curColWidth * item.x);\n      const y = Math.round(this.gridster.curRowHeight * item.y);\n      const width = this.gridster.curColWidth * item.cols - this.gridster.$options.margin;\n      const height = this.gridster.curRowHeight * item.rows - this.gridster.$options.margin;\n      // set the cell style\n      this.setCellPosition(renderer, el, x, y);\n      renderer.setStyle(el, 'width', width + 'px');\n      renderer.setStyle(el, 'height', height + 'px');\n      let marginBottom = null;\n      let marginRight = null;\n      if (this.gridster.$options.outerMargin) {\n        if (this.gridster.rows === item.rows + item.y) {\n          if (this.gridster.$options.outerMarginBottom !== null) {\n            marginBottom = this.gridster.$options.outerMarginBottom + 'px';\n          } else {\n            marginBottom = this.gridster.$options.margin + 'px';\n          }\n        }\n        if (this.gridster.columns === item.cols + item.x) {\n          if (this.gridster.$options.outerMarginBottom !== null) {\n            marginRight = this.gridster.$options.outerMarginRight + 'px';\n          } else {\n            marginRight = this.gridster.$options.margin + 'px';\n          }\n        }\n      }\n      renderer.setStyle(el, 'margin-bottom', marginBottom);\n      renderer.setStyle(el, DirTypes.LTR ? 'margin-right' : 'margin-left', marginRight);\n    }\n  }\n  updateGridster() {\n    let addClass = '';\n    let removeClass1 = '';\n    let removeClass2 = '';\n    let removeClass3 = '';\n    if (this.gridster.$options.gridType === GridType.Fit) {\n      addClass = GridType.Fit;\n      removeClass1 = GridType.ScrollVertical;\n      removeClass2 = GridType.ScrollHorizontal;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.ScrollVertical) {\n      this.gridster.curRowHeight = this.gridster.curColWidth * this.gridster.$options.rowHeightRatio;\n      addClass = GridType.ScrollVertical;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollHorizontal;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.ScrollHorizontal) {\n      const widthRatio = this.gridster.$options.rowHeightRatio;\n      const calWidthRatio = widthRatio >= 1 ? widthRatio : widthRatio + 1;\n      this.gridster.curColWidth = this.gridster.curRowHeight * calWidthRatio;\n      addClass = GridType.ScrollHorizontal;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollVertical;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.Fixed) {\n      this.gridster.curColWidth = this.gridster.$options.fixedColWidth + (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      this.gridster.curRowHeight = this.gridster.$options.fixedRowHeight + (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      addClass = GridType.Fixed;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollVertical;\n      removeClass3 = GridType.ScrollHorizontal;\n    } else if (this.gridster.$options.gridType === GridType.VerticalFixed) {\n      this.gridster.curRowHeight = this.gridster.$options.fixedRowHeight + (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      addClass = GridType.ScrollVertical;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollHorizontal;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.HorizontalFixed) {\n      this.gridster.curColWidth = this.gridster.$options.fixedColWidth + (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      addClass = GridType.ScrollHorizontal;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollVertical;\n      removeClass3 = GridType.Fixed;\n    }\n    if (this.gridster.mobile || this.gridster.$options.setGridSize && this.gridster.$options.gridType !== GridType.Fit) {\n      this.gridster.renderer.removeClass(this.gridster.el, addClass);\n    } else {\n      this.gridster.renderer.addClass(this.gridster.el, addClass);\n    }\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass1);\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass2);\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass3);\n  }\n  getGridColumnStyle(i) {\n    // generates the new style\n    const newPos = {\n      left: this.gridster.curColWidth * i,\n      width: this.gridster.curColWidth - this.gridster.$options.margin,\n      height: this.gridster.gridRows.length * this.gridster.curRowHeight - this.gridster.$options.margin,\n      style: {}\n    };\n    newPos.style = {\n      ...this.getLeftPosition(newPos.left),\n      width: newPos.width + 'px',\n      height: newPos.height + 'px'\n    };\n    // use the last cached style if it has same values as the generated one\n    const last = this.lastGridColumnStyles[i];\n    if (last && last.left === newPos.left && last.width === newPos.width && last.height === newPos.height) {\n      return last.style;\n    }\n    // cache and set new style\n    this.lastGridColumnStyles[i] = newPos;\n    return newPos.style;\n  }\n  getGridRowStyle(i) {\n    // generates the new style\n    const newPos = {\n      top: this.gridster.curRowHeight * i,\n      width: this.gridster.gridColumns.length * this.gridster.curColWidth + this.gridster.$options.margin,\n      height: this.gridster.curRowHeight - this.gridster.$options.margin,\n      style: {}\n    };\n    newPos.style = {\n      ...this.getTopPosition(newPos.top),\n      width: newPos.width + 'px',\n      height: newPos.height + 'px'\n    };\n    // use the last cached style if it has same values as the generated one\n    const last = this.lastGridRowStyles[i];\n    if (last && last.top === newPos.top && last.width === newPos.width && last.height === newPos.height) {\n      return last.style;\n    }\n    // cache and set new style\n    this.lastGridRowStyles[i] = newPos;\n    return newPos.style;\n  }\n  getLeftPosition(d) {\n    const dPosition = this.gridster.$options.dirType === DirTypes.RTL ? -d : d;\n    if (this.gridster.$options.useTransformPositioning) {\n      return {\n        transform: 'translateX(' + dPosition + 'px)'\n      };\n    } else {\n      return {\n        left: this.getLeftMargin() + dPosition + 'px'\n      };\n    }\n  }\n  getTopPosition(d) {\n    if (this.gridster.$options.useTransformPositioning) {\n      return {\n        transform: 'translateY(' + d + 'px)'\n      };\n    } else {\n      return {\n        top: this.getTopMargin() + d + 'px'\n      };\n    }\n  }\n  clearCellPosition(renderer, el) {\n    if (this.gridster.$options.useTransformPositioning) {\n      renderer.setStyle(el, 'transform', '');\n    } else {\n      renderer.setStyle(el, 'top', '');\n      renderer.setStyle(el, 'left', '');\n    }\n  }\n  setCellPosition(renderer, el, x, y) {\n    const xPosition = this.gridster.$options.dirType === DirTypes.RTL ? -x : x;\n    if (this.gridster.$options.useTransformPositioning) {\n      const transform = 'translate3d(' + xPosition + 'px, ' + y + 'px, 0)';\n      renderer.setStyle(el, 'transform', transform);\n    } else {\n      renderer.setStyle(el, 'left', this.getLeftMargin() + xPosition + 'px');\n      renderer.setStyle(el, 'top', this.getTopMargin() + y + 'px');\n    }\n  }\n  getLeftMargin() {\n    if (this.gridster.$options.outerMargin) {\n      if (this.gridster.$options.outerMarginLeft !== null) {\n        return this.gridster.$options.outerMarginLeft;\n      } else {\n        return this.gridster.$options.margin;\n      }\n    } else {\n      return 0;\n    }\n  }\n  getTopMargin() {\n    if (this.gridster.$options.outerMargin) {\n      if (this.gridster.$options.outerMarginTop !== null) {\n        return this.gridster.$options.outerMarginTop;\n      } else {\n        return this.gridster.$options.margin;\n      }\n    } else {\n      return 0;\n    }\n  }\n}\nclass GridsterPreviewComponent {\n  constructor(el, renderer) {\n    this.renderer = renderer;\n    this.el = el.nativeElement;\n  }\n  ngOnInit() {\n    this.sub = this.previewStyle$.subscribe(options => this.previewStyle(options));\n  }\n  ngOnDestroy() {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n  previewStyle(item) {\n    if (item) {\n      this.renderer.setStyle(this.el, 'display', 'block');\n      this.gridRenderer.updateItem(this.el, item, this.renderer);\n    } else {\n      this.renderer.setStyle(this.el, 'display', '');\n    }\n  }\n  static {\n    this.ɵfac = function GridsterPreviewComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || GridsterPreviewComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: GridsterPreviewComponent,\n      selectors: [[\"gridster-preview\"]],\n      inputs: {\n        previewStyle$: \"previewStyle$\",\n        gridRenderer: \"gridRenderer\"\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 0,\n      vars: 0,\n      template: function GridsterPreviewComponent_Template(rf, ctx) {},\n      styles: [\"gridster-preview{position:absolute;display:none;background:#00000026}\\n\"],\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridsterPreviewComponent, [{\n    type: Component,\n    args: [{\n      selector: 'gridster-preview',\n      template: '',\n      encapsulation: ViewEncapsulation.None,\n      standalone: true,\n      styles: [\"gridster-preview{position:absolute;display:none;background:#00000026}\\n\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.Renderer2\n  }], {\n    previewStyle$: [{\n      type: Input\n    }],\n    gridRenderer: [{\n      type: Input\n    }]\n  });\n})();\nclass GridsterComponent {\n  constructor(el, renderer, cdRef, zone) {\n    this.renderer = renderer;\n    this.cdRef = cdRef;\n    this.zone = zone;\n    this.columns = 0;\n    this.rows = 0;\n    this.gridColumns = [];\n    this.gridRows = [];\n    this.previewStyle$ = new EventEmitter();\n    this.calculateLayout$ = new Subject();\n    this.resize$ = new Subject();\n    this.destroy$ = new Subject();\n    this.optionsChanged = () => {\n      this.setOptions();\n      let widgetsIndex = this.grid.length - 1;\n      let widget;\n      for (; widgetsIndex >= 0; widgetsIndex--) {\n        widget = this.grid[widgetsIndex];\n        widget.updateOptions();\n      }\n      this.calculateLayout();\n    };\n    this.onResize = () => {\n      if (this.el.clientWidth) {\n        if (this.options.setGridSize) {\n          // reset width/height so the size is recalculated afterwards\n          this.renderer.setStyle(this.el, 'width', '');\n          this.renderer.setStyle(this.el, 'height', '');\n        }\n        this.setGridSize();\n        this.calculateLayout();\n      }\n    };\n    this.getNextPossiblePosition = (newItem, startingFrom = {}) => {\n      if (newItem.cols === -1) {\n        newItem.cols = this.$options.defaultItemCols;\n      }\n      if (newItem.rows === -1) {\n        newItem.rows = this.$options.defaultItemRows;\n      }\n      this.setGridDimensions();\n      let rowsIndex = startingFrom.y || 0;\n      let colsIndex;\n      for (; rowsIndex < this.rows; rowsIndex++) {\n        newItem.y = rowsIndex;\n        colsIndex = startingFrom.x || 0;\n        for (; colsIndex < this.columns; colsIndex++) {\n          newItem.x = colsIndex;\n          if (!this.checkCollision(newItem)) {\n            return true;\n          }\n        }\n      }\n      const canAddToRows = this.$options.maxRows >= this.rows + newItem.rows;\n      const canAddToColumns = this.$options.maxCols >= this.columns + newItem.cols;\n      const addToRows = this.rows <= this.columns && canAddToRows;\n      if (!addToRows && canAddToColumns) {\n        newItem.x = this.columns;\n        newItem.y = 0;\n        return true;\n      } else if (canAddToRows) {\n        newItem.y = this.rows;\n        newItem.x = 0;\n        return true;\n      }\n      return false;\n    };\n    this.getFirstPossiblePosition = item => {\n      const tmpItem = Object.assign({}, item);\n      this.getNextPossiblePosition(tmpItem);\n      return tmpItem;\n    };\n    this.getLastPossiblePosition = item => {\n      let farthestItem = {\n        y: 0,\n        x: 0\n      };\n      farthestItem = this.grid.reduce((prev, curr) => {\n        const currCoords = {\n          y: curr.$item.y + curr.$item.rows - 1,\n          x: curr.$item.x + curr.$item.cols - 1\n        };\n        if (GridsterUtils.compareItems(prev, currCoords) === 1) {\n          return currCoords;\n        } else {\n          return prev;\n        }\n      }, farthestItem);\n      const tmpItem = Object.assign({}, item);\n      this.getNextPossiblePosition(tmpItem, farthestItem);\n      return tmpItem;\n    };\n    this.el = el.nativeElement;\n    this.$options = JSON.parse(JSON.stringify(GridsterConfigService));\n    this.mobile = false;\n    this.curWidth = 0;\n    this.curHeight = 0;\n    this.grid = [];\n    this.curColWidth = 0;\n    this.curRowHeight = 0;\n    this.dragInProgress = false;\n    this.emptyCell = new GridsterEmptyCell(this);\n    this.compact = new GridsterCompact(this);\n    this.gridRenderer = new GridsterRenderer(this);\n  }\n  // ------ Function for swapWhileDragging option\n  // identical to checkCollision() except that here we add boundaries.\n  static checkCollisionTwoItemsForSwaping(item, item2) {\n    // if the cols or rows of the items are 1 , doesnt make any sense to set a boundary. Only if the item is bigger we set a boundary\n    const horizontalBoundaryItem1 = item.cols === 1 ? 0 : 1;\n    const horizontalBoundaryItem2 = item2.cols === 1 ? 0 : 1;\n    const verticalBoundaryItem1 = item.rows === 1 ? 0 : 1;\n    const verticalBoundaryItem2 = item2.rows === 1 ? 0 : 1;\n    return item.x + horizontalBoundaryItem1 < item2.x + item2.cols && item.x + item.cols > item2.x + horizontalBoundaryItem2 && item.y + verticalBoundaryItem1 < item2.y + item2.rows && item.y + item.rows > item2.y + verticalBoundaryItem2;\n  }\n  checkCollisionTwoItems(item, item2) {\n    const collision = item.x < item2.x + item2.cols && item.x + item.cols > item2.x && item.y < item2.y + item2.rows && item.y + item.rows > item2.y;\n    if (!collision) {\n      return false;\n    }\n    if (!this.$options.allowMultiLayer) {\n      return true;\n    }\n    const defaultLayerIndex = this.$options.defaultLayerIndex;\n    const layerIndex = item.layerIndex === undefined ? defaultLayerIndex : item.layerIndex;\n    const layerIndex2 = item2.layerIndex === undefined ? defaultLayerIndex : item2.layerIndex;\n    return layerIndex === layerIndex2;\n  }\n  ngOnInit() {\n    if (this.options.initCallback) {\n      this.options.initCallback(this);\n    }\n    this.calculateLayout$.pipe(debounceTime(0), takeUntil(this.destroy$)).subscribe(() => this.calculateLayout());\n    this.resize$.pipe(\n    // Cancel previously scheduled DOM timer if `calculateLayout()` has been called\n    // within this time range.\n    switchMap(() => timer(100)), takeUntil(this.destroy$)).subscribe(() => this.resize());\n  }\n  ngOnChanges(changes) {\n    if (changes.options) {\n      this.setOptions();\n      this.options.api = {\n        optionsChanged: this.optionsChanged,\n        resize: this.onResize,\n        getNextPossiblePosition: this.getNextPossiblePosition,\n        getFirstPossiblePosition: this.getFirstPossiblePosition,\n        getLastPossiblePosition: this.getLastPossiblePosition,\n        getItemComponent: item => this.getItemComponent(item)\n      };\n      this.columns = this.$options.minCols;\n      this.rows = this.$options.minRows + this.$options.addEmptyRowsCount;\n      this.setGridSize();\n      this.calculateLayout();\n    }\n  }\n  resize() {\n    let height;\n    let width;\n    if (this.$options.gridType === 'fit' && !this.mobile) {\n      width = this.el.offsetWidth;\n      height = this.el.offsetHeight;\n    } else {\n      width = this.el.clientWidth;\n      height = this.el.clientHeight;\n    }\n    if ((width !== this.curWidth || height !== this.curHeight) && this.checkIfToResize()) {\n      this.onResize();\n    }\n  }\n  setOptions() {\n    this.$options = GridsterUtils.merge(this.$options, this.options, this.$options);\n    if (!this.$options.disableWindowResize && !this.windowResize) {\n      this.windowResize = this.renderer.listen('window', 'resize', this.onResize);\n    } else if (this.$options.disableWindowResize && this.windowResize) {\n      this.windowResize();\n      this.windowResize = null;\n    }\n    this.emptyCell.updateOptions();\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.previewStyle$.complete();\n    if (this.windowResize) {\n      this.windowResize();\n    }\n    if (this.options && this.options.destroyCallback) {\n      this.options.destroyCallback(this);\n    }\n    if (this.options && this.options.api) {\n      this.options.api.resize = undefined;\n      this.options.api.optionsChanged = undefined;\n      this.options.api.getNextPossiblePosition = undefined;\n      this.options.api = undefined;\n    }\n    this.emptyCell.destroy();\n    this.emptyCell = null;\n    this.compact.destroy();\n    this.compact = null;\n  }\n  checkIfToResize() {\n    const clientWidth = this.el.clientWidth;\n    const offsetWidth = this.el.offsetWidth;\n    const scrollWidth = this.el.scrollWidth;\n    const clientHeight = this.el.clientHeight;\n    const offsetHeight = this.el.offsetHeight;\n    const scrollHeight = this.el.scrollHeight;\n    const verticalScrollPresent = clientWidth < offsetWidth && scrollHeight > offsetHeight && scrollHeight - offsetHeight < offsetWidth - clientWidth;\n    const horizontalScrollPresent = clientHeight < offsetHeight && scrollWidth > offsetWidth && scrollWidth - offsetWidth < offsetHeight - clientHeight;\n    if (verticalScrollPresent) {\n      return false;\n    }\n    return !horizontalScrollPresent;\n  }\n  checkIfMobile() {\n    if (this.$options.useBodyForBreakpoint) {\n      return this.$options.mobileBreakpoint > document.body.clientWidth;\n    } else {\n      return this.$options.mobileBreakpoint > this.curWidth;\n    }\n  }\n  setGridSize() {\n    const el = this.el;\n    let width;\n    let height;\n    if (this.$options.setGridSize || this.$options.gridType === GridType.Fit && !this.mobile) {\n      width = el.offsetWidth;\n      height = el.offsetHeight;\n    } else {\n      width = el.clientWidth;\n      height = el.clientHeight;\n    }\n    this.curWidth = width;\n    this.curHeight = height;\n  }\n  setGridDimensions() {\n    this.setGridSize();\n    if (!this.mobile && this.checkIfMobile()) {\n      this.mobile = !this.mobile;\n      this.renderer.addClass(this.el, 'mobile');\n    } else if (this.mobile && !this.checkIfMobile()) {\n      this.mobile = !this.mobile;\n      this.renderer.removeClass(this.el, 'mobile');\n    }\n    let rows = this.$options.minRows;\n    let columns = this.$options.minCols;\n    let widgetsIndex = this.grid.length - 1;\n    let widget;\n    for (; widgetsIndex >= 0; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (!widget.notPlaced) {\n        rows = Math.max(rows, widget.$item.y + widget.$item.rows);\n        columns = Math.max(columns, widget.$item.x + widget.$item.cols);\n      }\n    }\n    rows += this.$options.addEmptyRowsCount;\n    if (this.columns !== columns || this.rows !== rows) {\n      this.columns = columns;\n      this.rows = rows;\n      if (this.options.gridSizeChangedCallback) {\n        this.options.gridSizeChangedCallback(this);\n      }\n    }\n  }\n  calculateLayout() {\n    if (this.compact) {\n      this.compact.checkCompact();\n    }\n    this.setGridDimensions();\n    if (this.$options.outerMargin) {\n      let marginWidth = -this.$options.margin;\n      if (this.$options.outerMarginLeft !== null) {\n        marginWidth += this.$options.outerMarginLeft;\n        this.renderer.setStyle(this.el, 'padding-left', this.$options.outerMarginLeft + 'px');\n      } else {\n        marginWidth += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-left', this.$options.margin + 'px');\n      }\n      if (this.$options.outerMarginRight !== null) {\n        marginWidth += this.$options.outerMarginRight;\n        this.renderer.setStyle(this.el, 'padding-right', this.$options.outerMarginRight + 'px');\n      } else {\n        marginWidth += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-right', this.$options.margin + 'px');\n      }\n      this.curColWidth = (this.curWidth - marginWidth) / this.columns;\n      let marginHeight = -this.$options.margin;\n      if (this.$options.outerMarginTop !== null) {\n        marginHeight += this.$options.outerMarginTop;\n        this.renderer.setStyle(this.el, 'padding-top', this.$options.outerMarginTop + 'px');\n      } else {\n        marginHeight += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-top', this.$options.margin + 'px');\n      }\n      if (this.$options.outerMarginBottom !== null) {\n        marginHeight += this.$options.outerMarginBottom;\n        this.renderer.setStyle(this.el, 'padding-bottom', this.$options.outerMarginBottom + 'px');\n      } else {\n        marginHeight += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-bottom', this.$options.margin + 'px');\n      }\n      this.curRowHeight = (this.curHeight - marginHeight) / this.rows * this.$options.rowHeightRatio;\n    } else {\n      this.curColWidth = (this.curWidth + this.$options.margin) / this.columns;\n      this.curRowHeight = (this.curHeight + this.$options.margin) / this.rows * this.$options.rowHeightRatio;\n      this.renderer.setStyle(this.el, 'padding-left', 0 + 'px');\n      this.renderer.setStyle(this.el, 'padding-right', 0 + 'px');\n      this.renderer.setStyle(this.el, 'padding-top', 0 + 'px');\n      this.renderer.setStyle(this.el, 'padding-bottom', 0 + 'px');\n    }\n    this.gridRenderer.updateGridster();\n    if (this.$options.setGridSize) {\n      this.renderer.addClass(this.el, 'gridSize');\n      if (!this.mobile) {\n        this.renderer.setStyle(this.el, 'width', this.columns * this.curColWidth + this.$options.margin + 'px');\n        this.renderer.setStyle(this.el, 'height', this.rows * this.curRowHeight + this.$options.margin + 'px');\n      }\n    } else {\n      this.renderer.removeClass(this.el, 'gridSize');\n      this.renderer.setStyle(this.el, 'width', '');\n      this.renderer.setStyle(this.el, 'height', '');\n    }\n    this.updateGrid();\n    let widgetsIndex = this.grid.length - 1;\n    let widget;\n    for (; widgetsIndex >= 0; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      widget.setSize();\n      widget.drag.toggle();\n      widget.resize.toggle();\n    }\n    this.resize$.next();\n  }\n  updateGrid() {\n    if (this.$options.displayGrid === 'always' && !this.mobile) {\n      this.renderer.addClass(this.el, 'display-grid');\n    } else if (this.$options.displayGrid === 'onDrag&Resize' && this.dragInProgress) {\n      this.renderer.addClass(this.el, 'display-grid');\n    } else if (this.$options.displayGrid === 'none' || !this.dragInProgress || this.mobile) {\n      this.renderer.removeClass(this.el, 'display-grid');\n    }\n    this.setGridDimensions();\n    this.gridColumns.length = GridsterComponent.getNewArrayLength(this.columns, this.curWidth, this.curColWidth);\n    this.gridRows.length = GridsterComponent.getNewArrayLength(this.rows, this.curHeight, this.curRowHeight);\n    this.cdRef.markForCheck();\n  }\n  addItem(itemComponent) {\n    if (itemComponent.$item.cols === undefined) {\n      itemComponent.$item.cols = this.$options.defaultItemCols;\n      itemComponent.item.cols = itemComponent.$item.cols;\n      itemComponent.itemChanged();\n    }\n    if (itemComponent.$item.rows === undefined) {\n      itemComponent.$item.rows = this.$options.defaultItemRows;\n      itemComponent.item.rows = itemComponent.$item.rows;\n      itemComponent.itemChanged();\n    }\n    if (itemComponent.$item.x === -1 || itemComponent.$item.y === -1) {\n      this.autoPositionItem(itemComponent);\n    } else if (this.checkCollision(itemComponent.$item)) {\n      if (!this.$options.disableWarnings) {\n        itemComponent.notPlaced = true;\n        console.warn(\"Can't be placed in the bounds of the dashboard, trying to auto position!/n\" + JSON.stringify(itemComponent.item, ['cols', 'rows', 'x', 'y']));\n      }\n      if (!this.$options.disableAutoPositionOnConflict) {\n        this.autoPositionItem(itemComponent);\n      } else {\n        itemComponent.notPlaced = true;\n      }\n    }\n    this.grid.push(itemComponent);\n    this.calculateLayout$.next();\n  }\n  removeItem(itemComponent) {\n    this.grid.splice(this.grid.indexOf(itemComponent), 1);\n    this.calculateLayout$.next();\n    if (this.options.itemRemovedCallback) {\n      this.options.itemRemovedCallback(itemComponent.item, itemComponent);\n    }\n  }\n  checkCollision(item) {\n    let collision = false;\n    if (this.options.itemValidateCallback) {\n      collision = !this.options.itemValidateCallback(item);\n    }\n    if (!collision && this.checkGridCollision(item)) {\n      collision = true;\n    }\n    if (!collision) {\n      const c = this.findItemWithItem(item);\n      if (c) {\n        collision = c;\n      }\n    }\n    return collision;\n  }\n  checkGridCollision(item) {\n    const noNegativePosition = item.y > -1 && item.x > -1;\n    const maxGridCols = item.cols + item.x <= this.$options.maxCols;\n    const maxGridRows = item.rows + item.y <= this.$options.maxRows;\n    const maxItemCols = item.maxItemCols === undefined ? this.$options.maxItemCols : item.maxItemCols;\n    const minItemCols = item.minItemCols === undefined ? this.$options.minItemCols : item.minItemCols;\n    const maxItemRows = item.maxItemRows === undefined ? this.$options.maxItemRows : item.maxItemRows;\n    const minItemRows = item.minItemRows === undefined ? this.$options.minItemRows : item.minItemRows;\n    const inColsLimits = item.cols <= maxItemCols && item.cols >= minItemCols;\n    const inRowsLimits = item.rows <= maxItemRows && item.rows >= minItemRows;\n    const minAreaLimit = item.minItemArea === undefined ? this.$options.minItemArea : item.minItemArea;\n    const maxAreaLimit = item.maxItemArea === undefined ? this.$options.maxItemArea : item.maxItemArea;\n    const area = item.cols * item.rows;\n    const inMinArea = minAreaLimit <= area;\n    const inMaxArea = maxAreaLimit >= area;\n    return !(noNegativePosition && maxGridCols && maxGridRows && inColsLimits && inRowsLimits && inMinArea && inMaxArea);\n  }\n  findItemWithItem(item) {\n    let widgetsIndex = 0;\n    let widget;\n    for (; widgetsIndex < this.grid.length; widgetsIndex++) {\n      widget = this.grid[widgetsIndex];\n      if (widget.$item !== item && this.checkCollisionTwoItems(widget.$item, item)) {\n        return widget;\n      }\n    }\n    return false;\n  }\n  findItemsWithItem(item) {\n    const a = [];\n    let widgetsIndex = 0;\n    let widget;\n    for (; widgetsIndex < this.grid.length; widgetsIndex++) {\n      widget = this.grid[widgetsIndex];\n      if (widget.$item !== item && this.checkCollisionTwoItems(widget.$item, item)) {\n        a.push(widget);\n      }\n    }\n    return a;\n  }\n  autoPositionItem(itemComponent) {\n    if (this.getNextPossiblePosition(itemComponent.$item)) {\n      itemComponent.notPlaced = false;\n      itemComponent.item.x = itemComponent.$item.x;\n      itemComponent.item.y = itemComponent.$item.y;\n      itemComponent.itemChanged();\n    } else {\n      itemComponent.notPlaced = true;\n      if (!this.$options.disableWarnings) {\n        console.warn(\"Can't be placed in the bounds of the dashboard!/n\" + JSON.stringify(itemComponent.item, ['cols', 'rows', 'x', 'y']));\n      }\n    }\n  }\n  pixelsToPositionX(x, roundingMethod, noLimit) {\n    const position = roundingMethod(x / this.curColWidth);\n    if (noLimit) {\n      return position;\n    } else {\n      return Math.max(position, 0);\n    }\n  }\n  pixelsToPositionY(y, roundingMethod, noLimit) {\n    const position = roundingMethod(y / this.curRowHeight);\n    if (noLimit) {\n      return position;\n    } else {\n      return Math.max(position, 0);\n    }\n  }\n  positionXToPixels(x) {\n    return x * this.curColWidth;\n  }\n  positionYToPixels(y) {\n    return y * this.curRowHeight;\n  }\n  getItemComponent(item) {\n    return this.grid.find(c => c.item === item);\n  }\n  // ------ Functions for swapWhileDragging option\n  // identical to checkCollision() except that this function calls findItemWithItemForSwaping() instead of findItemWithItem()\n  checkCollisionForSwaping(item) {\n    let collision = false;\n    if (this.options.itemValidateCallback) {\n      collision = !this.options.itemValidateCallback(item);\n    }\n    if (!collision && this.checkGridCollision(item)) {\n      collision = true;\n    }\n    if (!collision) {\n      const c = this.findItemWithItemForSwapping(item);\n      if (c) {\n        collision = c;\n      }\n    }\n    return collision;\n  }\n  // identical to findItemWithItem() except that this function calls checkCollisionTwoItemsForSwaping() instead of checkCollisionTwoItems()\n  findItemWithItemForSwapping(item) {\n    let widgetsIndex = this.grid.length - 1;\n    let widget;\n    for (; widgetsIndex > -1; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (widget.$item !== item && GridsterComponent.checkCollisionTwoItemsForSwaping(widget.$item, item)) {\n        return widget;\n      }\n    }\n    return false;\n  }\n  previewStyle(drag = false) {\n    if (this.movingItem) {\n      if (this.compact && drag) {\n        this.compact.checkCompactItem(this.movingItem);\n      }\n      this.previewStyle$.next(this.movingItem);\n    } else {\n      this.previewStyle$.next(null);\n    }\n  }\n  // ------ End of functions for swapWhileDragging option\n  // eslint-disable-next-line @typescript-eslint/member-ordering\n  static getNewArrayLength(length, overallSize, size) {\n    const newLength = Math.max(length, Math.floor(overallSize / size));\n    if (newLength < 0) {\n      return 0;\n    }\n    if (Number.isFinite(newLength)) {\n      return Math.floor(newLength);\n    }\n    return 0;\n  }\n  static {\n    this.ɵfac = function GridsterComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || GridsterComponent)(i0.ɵɵdirectiveInject(ElementRef), i0.ɵɵdirectiveInject(Renderer2), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(NgZone));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: GridsterComponent,\n      selectors: [[\"gridster\"]],\n      inputs: {\n        options: \"options\"\n      },\n      standalone: true,\n      features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c0,\n      decls: 6,\n      vars: 2,\n      consts: [[1, \"gridster-column\", 3, \"ngStyle\"], [1, \"gridster-row\", 3, \"ngStyle\"], [1, \"gridster-preview\", 3, \"gridRenderer\", \"previewStyle$\"]],\n      template: function GridsterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵrepeaterCreate(0, GridsterComponent_For_1_Template, 1, 1, \"div\", 0, i0.ɵɵrepeaterTrackByIndex);\n          i0.ɵɵrepeaterCreate(2, GridsterComponent_For_3_Template, 1, 1, \"div\", 1, i0.ɵɵrepeaterTrackByIndex);\n          i0.ɵɵprojection(4);\n          i0.ɵɵelement(5, \"gridster-preview\", 2);\n        }\n        if (rf & 2) {\n          i0.ɵɵrepeater(ctx.gridColumns);\n          i0.ɵɵadvance(2);\n          i0.ɵɵrepeater(ctx.gridRows);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"gridRenderer\", ctx.gridRenderer)(\"previewStyle$\", ctx.previewStyle$);\n        }\n      },\n      dependencies: [NgStyle, GridsterPreviewComponent],\n      styles: [\"gridster{position:relative;box-sizing:border-box;background:gray;width:100%;height:100%;-webkit-user-select:none;user-select:none;display:block}gridster.fit{overflow-x:hidden;overflow-y:hidden}gridster.scrollVertical{overflow-x:hidden;overflow-y:auto}gridster.scrollHorizontal{overflow-x:auto;overflow-y:hidden}gridster.fixed{overflow:auto}gridster.mobile{overflow-x:hidden;overflow-y:auto}gridster.mobile gridster-item{position:relative}gridster.gridSize{height:initial;width:initial}gridster.gridSize.fit{height:100%;width:100%}gridster .gridster-column,gridster .gridster-row{position:absolute;display:none;transition:.3s;box-sizing:border-box}gridster.display-grid .gridster-column,gridster.display-grid .gridster-row{display:block}gridster .gridster-column{border-left:1px solid white;border-right:1px solid white}gridster .gridster-row{border-top:1px solid white;border-bottom:1px solid white}\\n\"],\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridsterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'gridster',\n      encapsulation: ViewEncapsulation.None,\n      standalone: true,\n      imports: [NgStyle, GridsterPreviewComponent],\n      template: \"@for (column of gridColumns; track i; let i = $index) {\\n<div\\n  class=\\\"gridster-column\\\"\\n  [ngStyle]=\\\"gridRenderer.getGridColumnStyle(i)\\\"\\n></div>\\n} @for (row of gridRows; track i; let i = $index) {\\n<div class=\\\"gridster-row\\\" [ngStyle]=\\\"gridRenderer.getGridRowStyle(i)\\\"></div>\\n}\\n<ng-content></ng-content>\\n<gridster-preview\\n  [gridRenderer]=\\\"gridRenderer\\\"\\n  [previewStyle$]=\\\"previewStyle$\\\"\\n  class=\\\"gridster-preview\\\"\\n></gridster-preview>\\n\",\n      styles: [\"gridster{position:relative;box-sizing:border-box;background:gray;width:100%;height:100%;-webkit-user-select:none;user-select:none;display:block}gridster.fit{overflow-x:hidden;overflow-y:hidden}gridster.scrollVertical{overflow-x:hidden;overflow-y:auto}gridster.scrollHorizontal{overflow-x:auto;overflow-y:hidden}gridster.fixed{overflow:auto}gridster.mobile{overflow-x:hidden;overflow-y:auto}gridster.mobile gridster-item{position:relative}gridster.gridSize{height:initial;width:initial}gridster.gridSize.fit{height:100%;width:100%}gridster .gridster-column,gridster .gridster-row{position:absolute;display:none;transition:.3s;box-sizing:border-box}gridster.display-grid .gridster-column,gridster.display-grid .gridster-row{display:block}gridster .gridster-column{border-left:1px solid white;border-right:1px solid white}gridster .gridster-row{border-top:1px solid white;border-bottom:1px solid white}\\n\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef,\n    decorators: [{\n      type: Inject,\n      args: [ElementRef]\n    }]\n  }, {\n    type: i0.Renderer2,\n    decorators: [{\n      type: Inject,\n      args: [Renderer2]\n    }]\n  }, {\n    type: i0.ChangeDetectorRef,\n    decorators: [{\n      type: Inject,\n      args: [ChangeDetectorRef]\n    }]\n  }, {\n    type: i0.NgZone,\n    decorators: [{\n      type: Inject,\n      args: [NgZone]\n    }]\n  }], {\n    options: [{\n      type: Input\n    }]\n  });\n})();\nclass GridsterPush {\n  constructor(gridsterItem) {\n    this.iteration = 0;\n    this.pushedItems = [];\n    this.pushedItemsTemp = [];\n    this.pushedItemsTempPath = [];\n    this.pushedItemsPath = [];\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridsterItem.gridster;\n    this.tryPattern = {\n      fromEast: [this.tryWest, this.trySouth, this.tryNorth, this.tryEast],\n      fromWest: [this.tryEast, this.trySouth, this.tryNorth, this.tryWest],\n      fromNorth: [this.trySouth, this.tryEast, this.tryWest, this.tryNorth],\n      fromSouth: [this.tryNorth, this.tryEast, this.tryWest, this.trySouth]\n    };\n    this.fromSouth = 'fromSouth';\n    this.fromNorth = 'fromNorth';\n    this.fromEast = 'fromEast';\n    this.fromWest = 'fromWest';\n  }\n  destroy() {\n    this.gridster = this.gridsterItem = null;\n  }\n  pushItems(direction, disable) {\n    if (this.gridster.$options.pushItems && !disable) {\n      this.pushedItemsOrder = [];\n      this.iteration = 0;\n      const pushed = this.push(this.gridsterItem, direction);\n      if (!pushed) {\n        this.restoreTempItems();\n      }\n      this.pushedItemsOrder = [];\n      this.pushedItemsTemp = [];\n      this.pushedItemsTempPath = [];\n      return pushed;\n    } else {\n      return false;\n    }\n  }\n  restoreTempItems() {\n    let i = this.pushedItemsTemp.length - 1;\n    for (; i > -1; i--) {\n      this.removeFromTempPushed(this.pushedItemsTemp[i]);\n    }\n  }\n  restoreItems() {\n    let i = 0;\n    const l = this.pushedItems.length;\n    let pushedItem;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.$item.x = pushedItem.item.x || 0;\n      pushedItem.$item.y = pushedItem.item.y || 0;\n      pushedItem.setSize();\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n  setPushedItems() {\n    let i = 0;\n    const l = this.pushedItems.length;\n    let pushedItem;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.checkItemChanges(pushedItem.$item, pushedItem.item);\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n  checkPushBack() {\n    let i = this.pushedItems.length - 1;\n    let change = false;\n    for (; i > -1; i--) {\n      if (this.checkPushedItem(this.pushedItems[i], i)) {\n        change = true;\n      }\n    }\n    if (change) {\n      this.checkPushBack();\n    }\n  }\n  push(gridsterItem, direction) {\n    if (this.iteration > 100) {\n      console.warn('max iteration reached');\n      return false;\n    }\n    if (this.gridster.checkGridCollision(gridsterItem.$item)) {\n      return false;\n    }\n    if (direction === '') {\n      return false;\n    }\n    const conflicts = this.gridster.findItemsWithItem(gridsterItem.$item);\n    const invert = direction === this.fromNorth || direction === this.fromWest;\n    // sort the list of conflicts in order of [y,x]. Invert when the push is from north and west\n    // this is done so they don't conflict witch each other and revert positions, keeping the previous order\n    conflicts.sort((a, b) => {\n      if (invert) {\n        return b.$item.y - a.$item.y || b.$item.x - a.$item.x;\n      } else {\n        return a.$item.y - b.$item.y || a.$item.x - b.$item.x;\n      }\n    });\n    let i = 0;\n    let itemCollision;\n    let makePush = true;\n    const pushedItems = [];\n    for (; i < conflicts.length; i++) {\n      itemCollision = conflicts[i];\n      if (itemCollision === this.gridsterItem) {\n        continue;\n      }\n      if (!itemCollision.canBeDragged()) {\n        makePush = false;\n        break;\n      }\n      const p = this.pushedItemsTemp.indexOf(itemCollision);\n      if (p > -1 && this.pushedItemsTempPath[p].length > 10) {\n        // stop if item is pushed more than 10 times to break infinite loops\n        makePush = false;\n        break;\n      }\n      if (this.tryPattern[direction][0].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        pushedItems.push(itemCollision);\n      } else if (this.tryPattern[direction][1].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        pushedItems.push(itemCollision);\n      } else if (this.tryPattern[direction][2].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        pushedItems.push(itemCollision);\n      } else if (this.tryPattern[direction][3].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        pushedItems.push(itemCollision);\n      } else {\n        makePush = false;\n        break;\n      }\n    }\n    if (!makePush) {\n      i = this.pushedItemsOrder.lastIndexOf(pushedItems[0]);\n      if (i > -1) {\n        let j = this.pushedItemsOrder.length - 1;\n        for (; j >= i; j--) {\n          itemCollision = this.pushedItemsOrder[j];\n          this.pushedItemsOrder.pop();\n          this.removeFromTempPushed(itemCollision);\n          this.removeFromPushedItem(itemCollision);\n        }\n      }\n    }\n    this.iteration++;\n    return makePush;\n  }\n  trySouth(gridsterItemCollide, gridsterItem) {\n    if (!this.gridster.$options.pushDirections.south) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.y = gridsterItem.$item.y + gridsterItem.$item.rows;\n    if (this.push(gridsterItemCollide, this.fromNorth)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n  tryNorth(gridsterItemCollide, gridsterItem) {\n    if (!this.gridster.$options.pushDirections.north) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.y = gridsterItem.$item.y - gridsterItemCollide.$item.rows;\n    if (this.push(gridsterItemCollide, this.fromSouth)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n  tryEast(gridsterItemCollide, gridsterItem) {\n    if (!this.gridster.$options.pushDirections.east) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.x = gridsterItem.$item.x + gridsterItem.$item.cols;\n    if (this.push(gridsterItemCollide, this.fromWest)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n  tryWest(gridsterItemCollide, gridsterItem) {\n    if (!this.gridster.$options.pushDirections.west) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.x = gridsterItem.$item.x - gridsterItemCollide.$item.cols;\n    if (this.push(gridsterItemCollide, this.fromEast)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n  addToTempPushed(gridsterItem) {\n    let i = this.pushedItemsTemp.indexOf(gridsterItem);\n    if (i === -1) {\n      i = this.pushedItemsTemp.push(gridsterItem) - 1;\n      this.pushedItemsTempPath[i] = [];\n    }\n    this.pushedItemsTempPath[i].push({\n      x: gridsterItem.$item.x,\n      y: gridsterItem.$item.y\n    });\n  }\n  removeFromTempPushed(gridsterItem) {\n    const i = this.pushedItemsTemp.indexOf(gridsterItem);\n    const tempPosition = this.pushedItemsTempPath[i].pop();\n    if (!tempPosition) {\n      return;\n    }\n    gridsterItem.$item.x = tempPosition.x;\n    gridsterItem.$item.y = tempPosition.y;\n    gridsterItem.setSize();\n    if (!this.pushedItemsTempPath[i].length) {\n      this.pushedItemsTemp.splice(i, 1);\n      this.pushedItemsTempPath.splice(i, 1);\n    }\n  }\n  addToPushed(gridsterItem) {\n    if (this.pushedItems.indexOf(gridsterItem) < 0) {\n      this.pushedItems.push(gridsterItem);\n      this.pushedItemsPath.push([{\n        x: gridsterItem.item.x || 0,\n        y: gridsterItem.item.y || 0\n      }, {\n        x: gridsterItem.$item.x,\n        y: gridsterItem.$item.y\n      }]);\n    } else {\n      const i = this.pushedItems.indexOf(gridsterItem);\n      this.pushedItemsPath[i].push({\n        x: gridsterItem.$item.x,\n        y: gridsterItem.$item.y\n      });\n    }\n  }\n  removeFromPushed(i) {\n    if (i > -1) {\n      this.pushedItems.splice(i, 1);\n      this.pushedItemsPath.splice(i, 1);\n    }\n  }\n  removeFromPushedItem(gridsterItem) {\n    const i = this.pushedItems.indexOf(gridsterItem);\n    if (i > -1) {\n      this.pushedItemsPath[i].pop();\n      if (!this.pushedItemsPath.length) {\n        this.pushedItems.splice(i, 1);\n        this.pushedItemsPath.splice(i, 1);\n      }\n    }\n  }\n  checkPushedItem(pushedItem, i) {\n    const path = this.pushedItemsPath[i];\n    let j = path.length - 2;\n    let lastPosition;\n    let x;\n    let y;\n    let change = false;\n    for (; j > -1; j--) {\n      lastPosition = path[j];\n      x = pushedItem.$item.x;\n      y = pushedItem.$item.y;\n      pushedItem.$item.x = lastPosition.x;\n      pushedItem.$item.y = lastPosition.y;\n      if (!this.gridster.findItemWithItem(pushedItem.$item)) {\n        pushedItem.setSize();\n        path.splice(j + 1, path.length - j - 1);\n        change = true;\n      } else {\n        pushedItem.$item.x = x;\n        pushedItem.$item.y = y;\n      }\n    }\n    if (path.length < 2) {\n      this.removeFromPushed(i);\n    }\n    return change;\n  }\n}\nlet scrollSensitivity;\nlet scrollSpeed;\nconst intervalDuration = 50;\nlet gridsterElement;\nlet resizeEvent;\nlet resizeEventType;\nlet intervalE;\nlet intervalW;\nlet intervalN;\nlet intervalS;\nfunction scroll(gridster, left, top, width, height, event, lastMouse, calculateItemPosition, resize, resizeEventScrollType) {\n  scrollSensitivity = gridster.$options.scrollSensitivity;\n  scrollSpeed = gridster.$options.scrollSpeed;\n  gridsterElement = gridster.el;\n  resizeEvent = resize;\n  resizeEventType = resizeEventScrollType;\n  const offsetWidth = gridsterElement.offsetWidth;\n  const offsetHeight = gridsterElement.offsetHeight;\n  const offsetLeft = gridsterElement.scrollLeft;\n  const offsetTop = gridsterElement.scrollTop;\n  const elemTopOffset = top - offsetTop;\n  const elemBottomOffset = offsetHeight + offsetTop - top - height;\n  const {\n    clientX,\n    clientY\n  } = event;\n  if (!gridster.$options.disableScrollVertical) {\n    if (lastMouse.clientY < clientY && elemBottomOffset < scrollSensitivity) {\n      cancelN();\n      if (resizeEvent && resizeEventType && !resizeEventType.south || intervalS) {\n        return;\n      }\n      intervalS = startVertical(1, calculateItemPosition, lastMouse);\n    } else if (lastMouse.clientY > clientY && offsetTop > 0 && elemTopOffset < scrollSensitivity) {\n      cancelS();\n      if (resizeEvent && resizeEventType && !resizeEventType.north || intervalN) {\n        return;\n      }\n      intervalN = startVertical(-1, calculateItemPosition, lastMouse);\n    } else if (lastMouse.clientY !== clientY) {\n      cancelVertical();\n    }\n  }\n  const elemRightOffset = offsetLeft + offsetWidth - left - width;\n  const elemLeftOffset = left - offsetLeft;\n  if (!gridster.$options.disableScrollHorizontal) {\n    if (lastMouse.clientX < clientX && elemRightOffset <= scrollSensitivity) {\n      cancelW();\n      if (resizeEvent && resizeEventType && !resizeEventType.east || intervalE) {\n        return;\n      }\n      intervalE = startHorizontal(1, calculateItemPosition, lastMouse);\n    } else if (lastMouse.clientX > clientX && offsetLeft > 0 && elemLeftOffset < scrollSensitivity) {\n      cancelE();\n      if (resizeEvent && resizeEventType && !resizeEventType.west || intervalW) {\n        return;\n      }\n      intervalW = startHorizontal(-1, calculateItemPosition, lastMouse);\n    } else if (lastMouse.clientX !== clientX) {\n      cancelHorizontal();\n    }\n  }\n}\nfunction startVertical(sign, calculateItemPosition, lastMouse) {\n  let clientY = lastMouse.clientY;\n  return window.setInterval(() => {\n    if (!gridsterElement || sign === -1 && gridsterElement.scrollTop - scrollSpeed < 0) {\n      cancelVertical();\n    }\n    gridsterElement.scrollTop += sign * scrollSpeed;\n    clientY += sign * scrollSpeed;\n    calculateItemPosition({\n      clientX: lastMouse.clientX,\n      clientY\n    });\n  }, intervalDuration);\n}\nfunction startHorizontal(sign, calculateItemPosition, lastMouse) {\n  let clientX = lastMouse.clientX;\n  return window.setInterval(() => {\n    if (!gridsterElement || sign === -1 && gridsterElement.scrollLeft - scrollSpeed < 0) {\n      cancelHorizontal();\n    }\n    gridsterElement.scrollLeft += sign * scrollSpeed;\n    clientX += sign * scrollSpeed;\n    calculateItemPosition({\n      clientX,\n      clientY: lastMouse.clientY\n    });\n  }, intervalDuration);\n}\nfunction cancelScroll() {\n  cancelHorizontal();\n  cancelVertical();\n  gridsterElement = null;\n}\nfunction cancelHorizontal() {\n  cancelE();\n  cancelW();\n}\nfunction cancelVertical() {\n  cancelN();\n  cancelS();\n}\nfunction cancelE() {\n  if (intervalE) {\n    clearInterval(intervalE);\n    intervalE = 0;\n  }\n}\nfunction cancelW() {\n  if (intervalW) {\n    clearInterval(intervalW);\n    intervalW = 0;\n  }\n}\nfunction cancelS() {\n  if (intervalS) {\n    clearInterval(intervalS);\n    intervalS = 0;\n  }\n}\nfunction cancelN() {\n  if (intervalN) {\n    clearInterval(intervalN);\n    intervalN = 0;\n  }\n}\nclass GridsterSwap {\n  constructor(gridsterItem) {\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridsterItem.gridster;\n  }\n  destroy() {\n    this.gridster = this.gridsterItem = this.swapedItem = null;\n  }\n  swapItems() {\n    if (this.gridster.$options.swap) {\n      this.checkSwapBack();\n      this.checkSwap(this.gridsterItem);\n    }\n  }\n  checkSwapBack() {\n    if (this.swapedItem) {\n      const x = this.swapedItem.$item.x;\n      const y = this.swapedItem.$item.y;\n      this.swapedItem.$item.x = this.swapedItem.item.x || 0;\n      this.swapedItem.$item.y = this.swapedItem.item.y || 0;\n      if (this.gridster.checkCollision(this.swapedItem.$item)) {\n        this.swapedItem.$item.x = x;\n        this.swapedItem.$item.y = y;\n      } else {\n        this.swapedItem.setSize();\n        this.gridsterItem.$item.x = this.gridsterItem.item.x || 0;\n        this.gridsterItem.$item.y = this.gridsterItem.item.y || 0;\n        this.swapedItem = undefined;\n      }\n    }\n  }\n  restoreSwapItem() {\n    if (this.swapedItem) {\n      this.swapedItem.$item.x = this.swapedItem.item.x || 0;\n      this.swapedItem.$item.y = this.swapedItem.item.y || 0;\n      this.swapedItem.setSize();\n      this.swapedItem = undefined;\n    }\n  }\n  setSwapItem() {\n    if (this.swapedItem) {\n      this.swapedItem.checkItemChanges(this.swapedItem.$item, this.swapedItem.item);\n      this.swapedItem = undefined;\n    }\n  }\n  checkSwap(pushedBy) {\n    let gridsterItemCollision;\n    if (this.gridster.$options.swapWhileDragging) {\n      gridsterItemCollision = this.gridster.checkCollisionForSwaping(pushedBy.$item);\n    } else {\n      gridsterItemCollision = this.gridster.checkCollision(pushedBy.$item);\n    }\n    if (gridsterItemCollision && gridsterItemCollision !== true && gridsterItemCollision.canBeDragged()) {\n      const gridsterItemCollide = gridsterItemCollision;\n      const copyCollisionX = gridsterItemCollide.$item.x;\n      const copyCollisionY = gridsterItemCollide.$item.y;\n      const copyX = pushedBy.$item.x;\n      const copyY = pushedBy.$item.y;\n      const diffX = copyX - copyCollisionX;\n      const diffY = copyY - copyCollisionY;\n      gridsterItemCollide.$item.x = pushedBy.item.x - diffX;\n      gridsterItemCollide.$item.y = pushedBy.item.y - diffY;\n      pushedBy.$item.x = gridsterItemCollide.item.x + diffX;\n      pushedBy.$item.y = gridsterItemCollide.item.y + diffY;\n      if (this.gridster.checkCollision(gridsterItemCollide.$item) || this.gridster.checkCollision(pushedBy.$item)) {\n        pushedBy.$item.x = copyX;\n        pushedBy.$item.y = copyY;\n        gridsterItemCollide.$item.x = copyCollisionX;\n        gridsterItemCollide.$item.y = copyCollisionY;\n      } else {\n        gridsterItemCollide.setSize();\n        this.swapedItem = gridsterItemCollide;\n        if (this.gridster.$options.swapWhileDragging) {\n          this.gridsterItem.checkItemChanges(this.gridsterItem.$item, this.gridsterItem.item);\n          this.setSwapItem();\n        }\n      }\n    }\n  }\n}\nconst GRIDSTER_ITEM_RESIZABLE_HANDLER_CLASS = 'gridster-item-resizable-handler';\nvar Direction;\n(function (Direction) {\n  Direction[\"UP\"] = \"UP\";\n  Direction[\"DOWN\"] = \"DOWN\";\n  Direction[\"LEFT\"] = \"LEFT\";\n  Direction[\"RIGHT\"] = \"RIGHT\";\n})(Direction || (Direction = {}));\nclass GridsterDraggable {\n  constructor(gridsterItem, gridster, zone) {\n    this.zone = zone;\n    this.collision = false;\n    this.dragMove = e => {\n      e.stopPropagation();\n      e.preventDefault();\n      GridsterUtils.checkTouchEvent(e);\n      // get the directions of the mouse event\n      let directions = this.getDirections(e);\n      if (this.gridster.options.enableBoundaryControl) {\n        // prevent moving up at the top of gridster\n        if (directions.includes(Direction.UP) && this.gridsterItem.el.getBoundingClientRect().top < this.gridster.el.getBoundingClientRect().top + (this.outerMarginTop ?? this.margin)) {\n          directions = directions.filter(direction => direction != Direction.UP);\n          e = new MouseEvent(e.type, {\n            clientX: e.clientX,\n            clientY: this.lastMouse.clientY\n          });\n        }\n        // prevent moving left at the leftmost column of gridster\n        if (directions.includes(Direction.LEFT) && this.gridsterItem.el.getBoundingClientRect().left < this.gridster.el.getBoundingClientRect().left + (this.outerMarginLeft ?? this.margin)) {\n          directions = directions.filter(direction => direction != Direction.LEFT);\n          e = new MouseEvent(e.type, {\n            clientX: this.lastMouse.clientX,\n            clientY: e.clientY\n          });\n        }\n        // prevent moving right at the rightmost column of gridster\n        if (directions.includes(Direction.RIGHT) && this.gridsterItem.el.getBoundingClientRect().right > this.gridster.el.getBoundingClientRect().right - (this.outerMarginRight ?? this.margin)) {\n          directions = directions.filter(direction => direction != Direction.RIGHT);\n          e = new MouseEvent(e.type, {\n            clientX: this.lastMouse.clientX,\n            clientY: e.clientY\n          });\n        }\n        // prevent moving down at the bottom of gridster\n        if (directions.includes(Direction.DOWN) && this.gridsterItem.el.getBoundingClientRect().bottom > this.gridster.el.getBoundingClientRect().bottom - (this.outerMarginBottom ?? this.margin)) {\n          directions = directions.filter(direction => direction != Direction.DOWN);\n          e = new MouseEvent(e.type, {\n            clientX: e.clientX,\n            clientY: this.lastMouse.clientY\n          });\n        }\n      }\n      // do not change item location when there is no direction to go\n      if (directions.length) {\n        this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n        this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n        scroll(this.gridster, this.left, this.top, this.width, this.height, e, this.lastMouse, this.calculateItemPositionFromMousePosition);\n        this.calculateItemPositionFromMousePosition(e);\n      }\n    };\n    this.calculateItemPositionFromMousePosition = e => {\n      if (this.gridster.options.scale) {\n        this.calculateItemPositionWithScale(e, this.gridster.options.scale);\n      } else {\n        this.calculateItemPositionWithoutScale(e);\n      }\n      this.calculateItemPosition();\n      this.lastMouse.clientX = e.clientX;\n      this.lastMouse.clientY = e.clientY;\n      this.zone.run(() => {\n        this.gridster.updateGrid();\n      });\n    };\n    this.dragStop = e => {\n      e.stopPropagation();\n      e.preventDefault();\n      cancelScroll();\n      this.cancelOnBlur();\n      this.mousemove();\n      this.mouseup();\n      this.mouseleave();\n      this.touchmove();\n      this.touchend();\n      this.touchcancel();\n      this.gridsterItem.renderer.removeClass(this.gridsterItem.el, 'gridster-item-moving');\n      this.gridster.dragInProgress = false;\n      this.gridster.updateGrid();\n      this.path = [];\n      if (this.gridster.options.draggable && this.gridster.options.draggable.stop) {\n        Promise.resolve(this.gridster.options.draggable.stop(this.gridsterItem.item, this.gridsterItem, e)).then(this.makeDrag, this.cancelDrag);\n      } else {\n        this.makeDrag();\n      }\n      setTimeout(() => {\n        if (this.gridster) {\n          this.gridster.movingItem = null;\n          this.gridster.previewStyle(true);\n        }\n      });\n    };\n    this.cancelDrag = () => {\n      this.gridsterItem.$item.x = this.gridsterItem.item.x || 0;\n      this.gridsterItem.$item.y = this.gridsterItem.item.y || 0;\n      this.gridsterItem.setSize();\n      if (this.push) {\n        this.push.restoreItems();\n      }\n      if (this.swap) {\n        this.swap.restoreSwapItem();\n      }\n      if (this.push) {\n        this.push.destroy();\n        this.push = null;\n      }\n      if (this.swap) {\n        this.swap.destroy();\n        this.swap = null;\n      }\n    };\n    this.makeDrag = () => {\n      if (this.gridster.$options.draggable.dropOverItems && this.gridster.options.draggable && this.gridster.options.draggable.dropOverItemsCallback && this.collision && this.collision !== true && this.collision.$item) {\n        this.gridster.options.draggable.dropOverItemsCallback(this.gridsterItem.item, this.collision.item, this.gridster);\n      }\n      this.collision = false;\n      this.gridsterItem.setSize();\n      this.gridsterItem.checkItemChanges(this.gridsterItem.$item, this.gridsterItem.item);\n      if (this.push) {\n        this.push.setPushedItems();\n      }\n      if (this.swap) {\n        this.swap.setSwapItem();\n      }\n      if (this.push) {\n        this.push.destroy();\n        this.push = null;\n      }\n      if (this.swap) {\n        this.swap.destroy();\n        this.swap = null;\n      }\n    };\n    this.dragStartDelay = e => {\n      const target = e.target;\n      if (target.classList.contains(GRIDSTER_ITEM_RESIZABLE_HANDLER_CLASS)) {\n        return;\n      }\n      if (GridsterUtils.checkContentClassForEvent(this.gridster, e)) {\n        return;\n      }\n      GridsterUtils.checkTouchEvent(e);\n      if (!this.gridster.$options.draggable.delayStart) {\n        this.dragStart(e);\n        return;\n      }\n      const timeout = setTimeout(() => {\n        this.dragStart(e);\n        cancelDrag();\n      }, this.gridster.$options.draggable.delayStart);\n      const cancelMouse = this.gridsterItem.renderer.listen('document', 'mouseup', cancelDrag);\n      const cancelMouseLeave = this.gridsterItem.renderer.listen('document', 'mouseleave', cancelDrag);\n      const cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', cancelDrag);\n      const cancelTouchMove = this.gridsterItem.renderer.listen('document', 'touchmove', cancelMove);\n      const cancelTouchEnd = this.gridsterItem.renderer.listen('document', 'touchend', cancelDrag);\n      const cancelTouchCancel = this.gridsterItem.renderer.listen('document', 'touchcancel', cancelDrag);\n      function cancelMove(eventMove) {\n        GridsterUtils.checkTouchEvent(eventMove);\n        if (Math.abs(eventMove.clientX - e.clientX) > 9 || Math.abs(eventMove.clientY - e.clientY) > 9) {\n          cancelDrag();\n        }\n      }\n      function cancelDrag() {\n        clearTimeout(timeout);\n        cancelOnBlur();\n        cancelMouse();\n        cancelMouseLeave();\n        cancelTouchMove();\n        cancelTouchEnd();\n        cancelTouchCancel();\n      }\n    };\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridster;\n    this.lastMouse = {\n      clientX: 0,\n      clientY: 0\n    };\n    this.path = [];\n  }\n  destroy() {\n    if (this.gridster.previewStyle) {\n      this.gridster.previewStyle(true);\n    }\n    this.gridsterItem = this.gridster = this.collision = null;\n    if (this.mousedown) {\n      this.mousedown();\n      this.touchstart();\n    }\n  }\n  dragStart(e) {\n    if (e.which && e.which !== 1) {\n      return;\n    }\n    if (this.gridster.options.draggable && this.gridster.options.draggable.start) {\n      this.gridster.options.draggable.start(this.gridsterItem.item, this.gridsterItem, e);\n    }\n    e.stopPropagation();\n    e.preventDefault();\n    this.zone.runOutsideAngular(() => {\n      this.mousemove = this.gridsterItem.renderer.listen('document', 'mousemove', this.dragMove);\n      this.touchmove = this.gridster.renderer.listen(this.gridster.el, 'touchmove', this.dragMove);\n    });\n    this.mouseup = this.gridsterItem.renderer.listen('document', 'mouseup', this.dragStop);\n    this.mouseleave = this.gridsterItem.renderer.listen('document', 'mouseleave', this.dragStop);\n    this.cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', this.dragStop);\n    this.touchend = this.gridsterItem.renderer.listen('document', 'touchend', this.dragStop);\n    this.touchcancel = this.gridsterItem.renderer.listen('document', 'touchcancel', this.dragStop);\n    this.gridsterItem.renderer.addClass(this.gridsterItem.el, 'gridster-item-moving');\n    this.margin = this.gridster.$options.margin;\n    this.outerMarginTop = this.gridster.$options.outerMarginTop;\n    this.outerMarginRight = this.gridster.$options.outerMarginRight;\n    this.outerMarginBottom = this.gridster.$options.outerMarginBottom;\n    this.outerMarginLeft = this.gridster.$options.outerMarginLeft;\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    this.left = this.gridsterItem.left - this.margin;\n    this.top = this.gridsterItem.top - this.margin;\n    this.originalClientX = e.clientX;\n    this.originalClientY = e.clientY;\n    this.width = this.gridsterItem.width;\n    this.height = this.gridsterItem.height;\n    if (this.gridster.$options.dirType === DirTypes.RTL) {\n      this.diffLeft = e.clientX - this.gridster.el.scrollWidth + this.gridsterItem.left;\n    } else {\n      this.diffLeft = e.clientX + this.offsetLeft - this.margin - this.left;\n    }\n    this.diffTop = e.clientY + this.offsetTop - this.margin - this.top;\n    this.gridster.movingItem = this.gridsterItem.$item;\n    this.gridster.previewStyle(true);\n    this.push = new GridsterPush(this.gridsterItem);\n    this.swap = new GridsterSwap(this.gridsterItem);\n    this.gridster.dragInProgress = true;\n    this.gridster.updateGrid();\n    this.path.push({\n      x: this.gridsterItem.item.x || 0,\n      y: this.gridsterItem.item.y || 0\n    });\n  }\n  calculateItemPositionWithScale(e, scale) {\n    if (this.gridster.$options.dirType === DirTypes.RTL) {\n      this.left = this.gridster.el.scrollWidth - this.originalClientX + (e.clientX - this.originalClientX) / scale + this.diffLeft;\n    } else {\n      this.left = this.originalClientX + (e.clientX - this.originalClientX) / scale + this.offsetLeft - this.diffLeft;\n    }\n    this.top = this.originalClientY + (e.clientY - this.originalClientY) / scale + this.offsetTop - this.diffTop;\n  }\n  calculateItemPositionWithoutScale(e) {\n    if (this.gridster.$options.dirType === DirTypes.RTL) {\n      this.left = this.gridster.el.scrollWidth - e.clientX + this.diffLeft;\n    } else {\n      this.left = e.clientX + this.offsetLeft - this.diffLeft;\n    }\n    this.top = e.clientY + this.offsetTop - this.diffTop;\n  }\n  calculateItemPosition() {\n    this.gridster.movingItem = this.gridsterItem.$item;\n    this.positionX = this.gridster.pixelsToPositionX(this.left, Math.round);\n    this.positionY = this.gridster.pixelsToPositionY(this.top, Math.round);\n    this.positionXBackup = this.gridsterItem.$item.x;\n    this.positionYBackup = this.gridsterItem.$item.y;\n    this.gridsterItem.$item.x = this.positionX;\n    if (this.gridster.checkGridCollision(this.gridsterItem.$item)) {\n      this.gridsterItem.$item.x = this.positionXBackup;\n    }\n    this.gridsterItem.$item.y = this.positionY;\n    if (this.gridster.checkGridCollision(this.gridsterItem.$item)) {\n      this.gridsterItem.$item.y = this.positionYBackup;\n    }\n    this.gridster.gridRenderer.setCellPosition(this.gridsterItem.renderer, this.gridsterItem.el, this.left, this.top);\n    if (this.positionXBackup !== this.gridsterItem.$item.x || this.positionYBackup !== this.gridsterItem.$item.y) {\n      const lastPosition = this.path[this.path.length - 1];\n      let direction = '';\n      if (lastPosition.x < this.gridsterItem.$item.x) {\n        direction = this.push.fromWest;\n      } else if (lastPosition.x > this.gridsterItem.$item.x) {\n        direction = this.push.fromEast;\n      } else if (lastPosition.y < this.gridsterItem.$item.y) {\n        direction = this.push.fromNorth;\n      } else if (lastPosition.y > this.gridsterItem.$item.y) {\n        direction = this.push.fromSouth;\n      }\n      this.push.pushItems(direction, this.gridster.$options.disablePushOnDrag);\n      this.swap.swapItems();\n      this.collision = this.gridster.checkCollision(this.gridsterItem.$item);\n      if (this.collision) {\n        this.gridsterItem.$item.x = this.positionXBackup;\n        this.gridsterItem.$item.y = this.positionYBackup;\n        if (this.gridster.$options.draggable.dropOverItems && this.collision !== true && this.collision.$item) {\n          this.gridster.movingItem = null;\n        }\n      } else {\n        this.path.push({\n          x: this.gridsterItem.$item.x,\n          y: this.gridsterItem.$item.y\n        });\n      }\n      this.push.checkPushBack();\n    } else {\n      // reset the collision when you drag and drop on an adjacent cell that is not empty\n      // and go back to the cell you were in from the beginning,\n      // this is to prevent `dropOverItemsCallback'\n      this.collision = false;\n    }\n    this.gridster.previewStyle(true);\n  }\n  toggle() {\n    const enableDrag = this.gridsterItem.canBeDragged();\n    if (!this.enabled && enableDrag) {\n      this.enabled = !this.enabled;\n      this.mousedown = this.gridsterItem.renderer.listen(this.gridsterItem.el, 'mousedown', this.dragStartDelay);\n      this.touchstart = this.gridsterItem.renderer.listen(this.gridsterItem.el, 'touchstart', this.dragStartDelay);\n    } else if (this.enabled && !enableDrag) {\n      this.enabled = !this.enabled;\n      this.mousedown();\n      this.touchstart();\n    }\n  }\n  /**\n   * Returns the list of directions for given mouse event\n   * @param e Mouse event\n   * */\n  getDirections(e) {\n    const directions = [];\n    if (this.lastMouse.clientX === 0 && this.lastMouse.clientY === 0) {\n      this.lastMouse.clientY = e.clientY;\n      this.lastMouse.clientX = e.clientX;\n    }\n    if (this.lastMouse.clientY > e.clientY) {\n      directions.push(Direction.UP);\n    }\n    if (this.lastMouse.clientY < e.clientY) {\n      directions.push(Direction.DOWN);\n    }\n    if (this.lastMouse.clientX < e.clientX) {\n      directions.push(Direction.RIGHT);\n    }\n    if (this.lastMouse.clientX > e.clientX) {\n      directions.push(Direction.LEFT);\n    }\n    return directions;\n  }\n}\nclass GridsterPushResize {\n  constructor(gridsterItem) {\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridsterItem.gridster;\n    this.tryPattern = {\n      fromEast: this.tryWest,\n      fromWest: this.tryEast,\n      fromNorth: this.trySouth,\n      fromSouth: this.tryNorth\n    };\n    this.fromSouth = 'fromSouth';\n    this.fromNorth = 'fromNorth';\n    this.fromEast = 'fromEast';\n    this.fromWest = 'fromWest';\n  }\n  destroy() {\n    this.gridster = this.gridsterItem = null;\n  }\n  pushItems(direction) {\n    if (this.gridster.$options.pushResizeItems) {\n      return this.push(this.gridsterItem, direction);\n    } else {\n      return false;\n    }\n  }\n  restoreItems() {\n    let i = 0;\n    const l = this.pushedItems.length;\n    let pushedItem;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.$item.x = pushedItem.item.x || 0;\n      pushedItem.$item.y = pushedItem.item.y || 0;\n      pushedItem.$item.cols = pushedItem.item.cols || 1;\n      pushedItem.$item.row = pushedItem.item.row || 1;\n      pushedItem.setSize();\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n  setPushedItems() {\n    let i = 0;\n    const l = this.pushedItems.length;\n    let pushedItem;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.checkItemChanges(pushedItem.$item, pushedItem.item);\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n  checkPushBack() {\n    let i = this.pushedItems.length - 1;\n    let change = false;\n    for (; i > -1; i--) {\n      if (this.checkPushedItem(this.pushedItems[i], i)) {\n        change = true;\n      }\n    }\n    if (change) {\n      this.checkPushBack();\n    }\n  }\n  push(gridsterItem, direction) {\n    const gridsterItemCollision = this.gridster.checkCollision(gridsterItem.$item);\n    if (gridsterItemCollision && gridsterItemCollision !== true && gridsterItemCollision !== this.gridsterItem && gridsterItemCollision.canBeResized()) {\n      if (this.tryPattern[direction].call(this, gridsterItemCollision, gridsterItem, direction)) {\n        return true;\n      }\n    } else if (gridsterItemCollision === false) {\n      return true;\n    }\n    return false;\n  }\n  trySouth(gridsterItemCollide, gridsterItem, direction) {\n    const backUpY = gridsterItemCollide.$item.y;\n    const backUpRows = gridsterItemCollide.$item.rows;\n    gridsterItemCollide.$item.y = gridsterItem.$item.y + gridsterItem.$item.rows;\n    gridsterItemCollide.$item.rows = backUpRows + backUpY - gridsterItemCollide.$item.y;\n    if (!this.gridster.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item) && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.y = backUpY;\n      gridsterItemCollide.$item.rows = backUpRows;\n    }\n    return false;\n  }\n  tryNorth(gridsterItemCollide, gridsterItem, direction) {\n    const backUpRows = gridsterItemCollide.$item.rows;\n    gridsterItemCollide.$item.rows = gridsterItem.$item.y - gridsterItemCollide.$item.y;\n    if (!this.gridster.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item) && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.rows = backUpRows;\n    }\n    return false;\n  }\n  tryEast(gridsterItemCollide, gridsterItem, direction) {\n    const backUpX = gridsterItemCollide.$item.x;\n    const backUpCols = gridsterItemCollide.$item.cols;\n    gridsterItemCollide.$item.x = gridsterItem.$item.x + gridsterItem.$item.cols;\n    gridsterItemCollide.$item.cols = backUpCols + backUpX - gridsterItemCollide.$item.x;\n    if (!this.gridster.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item) && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.x = backUpX;\n      gridsterItemCollide.$item.cols = backUpCols;\n    }\n    return false;\n  }\n  tryWest(gridsterItemCollide, gridsterItem, direction) {\n    const backUpCols = gridsterItemCollide.$item.cols;\n    gridsterItemCollide.$item.cols = gridsterItem.$item.x - gridsterItemCollide.$item.x;\n    if (!this.gridster.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item) && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.cols = backUpCols;\n    }\n    return false;\n  }\n  addToPushed(gridsterItem) {\n    if (this.pushedItems.indexOf(gridsterItem) < 0) {\n      this.pushedItems.push(gridsterItem);\n      this.pushedItemsPath.push([{\n        x: gridsterItem.item.x || 0,\n        y: gridsterItem.item.y || 0,\n        cols: gridsterItem.item.cols || 0,\n        rows: gridsterItem.item.rows || 0\n      }, {\n        x: gridsterItem.$item.x,\n        y: gridsterItem.$item.y,\n        cols: gridsterItem.$item.cols,\n        rows: gridsterItem.$item.rows\n      }]);\n    } else {\n      const i = this.pushedItems.indexOf(gridsterItem);\n      this.pushedItemsPath[i].push({\n        x: gridsterItem.$item.x,\n        y: gridsterItem.$item.y,\n        cols: gridsterItem.$item.cols,\n        rows: gridsterItem.$item.rows\n      });\n    }\n  }\n  removeFromPushed(i) {\n    if (i > -1) {\n      this.pushedItems.splice(i, 1);\n      this.pushedItemsPath.splice(i, 1);\n    }\n  }\n  checkPushedItem(pushedItem, i) {\n    const path = this.pushedItemsPath[i];\n    let j = path.length - 2;\n    let lastPosition;\n    let x;\n    let y;\n    let cols;\n    let rows;\n    for (; j > -1; j--) {\n      lastPosition = path[j];\n      x = pushedItem.$item.x;\n      y = pushedItem.$item.y;\n      cols = pushedItem.$item.cols;\n      rows = pushedItem.$item.rows;\n      pushedItem.$item.x = lastPosition.x;\n      pushedItem.$item.y = lastPosition.y;\n      pushedItem.$item.cols = lastPosition.cols;\n      pushedItem.$item.rows = lastPosition.rows;\n      if (!this.gridster.findItemWithItem(pushedItem.$item)) {\n        pushedItem.setSize();\n        path.splice(j + 1, path.length - 1 - j);\n      } else {\n        pushedItem.$item.x = x;\n        pushedItem.$item.y = y;\n        pushedItem.$item.cols = cols;\n        pushedItem.$item.rows = rows;\n      }\n    }\n    if (path.length < 2) {\n      this.removeFromPushed(i);\n      return true;\n    }\n    return false;\n  }\n}\nclass GridsterResizable {\n  constructor(gridsterItem, gridster, zone) {\n    this.zone = zone;\n    /**\n     * The direction function may reference any of the `GridsterResizable` class methods, that are\n     * responsible for gridster resize when the `dragmove` event is being handled. E.g. it may reference\n     * the `handleNorth` method when the north handle is pressed and moved by a mouse.\n     */\n    this.directionFunction = null;\n    this.dragMove = e => {\n      if (this.directionFunction === null) {\n        throw new Error('The `directionFunction` has not been set before calling `dragMove`.');\n      }\n      e.stopPropagation();\n      e.preventDefault();\n      GridsterUtils.checkTouchEvent(e);\n      this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n      this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n      scroll(this.gridster, this.left, this.top, this.width, this.height, e, this.lastMouse, this.directionFunction, true, this.resizeEventScrollType);\n      const scale = this.gridster.options.scale || 1;\n      this.directionFunction({\n        clientX: this.originalClientX + (e.clientX - this.originalClientX) / scale,\n        clientY: this.originalClientY + (e.clientY - this.originalClientY) / scale\n      });\n      this.lastMouse.clientX = e.clientX;\n      this.lastMouse.clientY = e.clientY;\n      this.zone.run(() => {\n        this.gridster.updateGrid();\n      });\n    };\n    this.dragStop = e => {\n      e.stopPropagation();\n      e.preventDefault();\n      cancelScroll();\n      this.mousemove();\n      this.mouseup();\n      this.mouseleave();\n      this.cancelOnBlur();\n      this.touchmove();\n      this.touchend();\n      this.touchcancel();\n      this.gridster.dragInProgress = false;\n      this.gridster.updateGrid();\n      if (this.gridster.options.resizable && this.gridster.options.resizable.stop) {\n        Promise.resolve(this.gridster.options.resizable.stop(this.gridsterItem.item, this.gridsterItem, e)).then(this.makeResize, this.cancelResize);\n      } else {\n        this.makeResize();\n      }\n      setTimeout(() => {\n        this.gridsterItem.renderer.removeClass(this.gridsterItem.el, 'gridster-item-resizing');\n        if (this.gridster) {\n          this.gridster.movingItem = null;\n          this.gridster.previewStyle();\n        }\n      });\n    };\n    this.cancelResize = () => {\n      this.gridsterItem.$item.cols = this.gridsterItem.item.cols || 1;\n      this.gridsterItem.$item.rows = this.gridsterItem.item.rows || 1;\n      this.gridsterItem.$item.x = this.gridsterItem.item.x || 0;\n      this.gridsterItem.$item.y = this.gridsterItem.item.y || 0;\n      this.gridsterItem.setSize();\n      this.push.restoreItems();\n      this.pushResize.restoreItems();\n      this.push.destroy();\n      this.push = null;\n      this.pushResize.destroy();\n      this.pushResize = null;\n    };\n    this.makeResize = () => {\n      this.gridsterItem.setSize();\n      this.gridsterItem.checkItemChanges(this.gridsterItem.$item, this.gridsterItem.item);\n      this.push.setPushedItems();\n      this.pushResize.setPushedItems();\n      this.push.destroy();\n      this.push = null;\n      this.pushResize.destroy();\n      this.pushResize = null;\n    };\n    this.handleNorth = e => {\n      this.top = e.clientY + this.offsetTop - this.diffTop;\n      this.height = this.bottom - this.top;\n      if (this.minHeight > this.height) {\n        this.height = this.minHeight;\n        this.top = this.bottom - this.minHeight;\n      } else if (this.gridster.options.enableBoundaryControl) {\n        this.top = Math.max(0, this.top);\n        this.height = this.bottom - this.top;\n      }\n      const marginTop = this.gridster.options.pushItems ? this.margin : 0;\n      this.newPosition = this.gridster.pixelsToPositionY(this.top + marginTop, Math.floor);\n      if (this.gridsterItem.$item.y !== this.newPosition) {\n        this.itemBackup[1] = this.gridsterItem.$item.y;\n        this.itemBackup[3] = this.gridsterItem.$item.rows;\n        this.gridsterItem.$item.rows += this.gridsterItem.$item.y - this.newPosition;\n        this.gridsterItem.$item.y = this.newPosition;\n        this.pushResize.pushItems(this.pushResize.fromSouth);\n        this.push.pushItems(this.push.fromSouth, this.gridster.$options.disablePushOnResize);\n        if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n          this.gridsterItem.$item.y = this.itemBackup[1];\n          this.gridsterItem.$item.rows = this.itemBackup[3];\n          this.top = this.gridster.positionYToPixels(this.gridsterItem.$item.y);\n          this.setItemTop(this.gridster.positionYToPixels(this.gridsterItem.$item.y));\n          this.setItemHeight(this.gridster.positionYToPixels(this.gridsterItem.$item.rows) - this.margin);\n          return;\n        } else {\n          this.gridster.previewStyle();\n        }\n        this.pushResize.checkPushBack();\n        this.push.checkPushBack();\n      }\n      this.setItemTop(this.top);\n      this.setItemHeight(this.height);\n    };\n    this.handleWest = e => {\n      const clientX = this.gridster.$options.dirType === DirTypes.RTL ? this.originalClientX + (this.originalClientX - e.clientX) : e.clientX;\n      this.left = clientX + this.offsetLeft - this.diffLeft;\n      this.width = this.right - this.left;\n      if (this.minWidth > this.width) {\n        this.width = this.minWidth;\n        this.left = this.right - this.minWidth;\n      } else if (this.gridster.options.enableBoundaryControl) {\n        this.left = Math.max(0, this.left);\n        this.width = this.right - this.left;\n      }\n      const marginLeft = this.gridster.options.pushItems ? this.margin : 0;\n      this.newPosition = this.gridster.pixelsToPositionX(this.left + marginLeft, Math.floor);\n      if (this.gridsterItem.$item.x !== this.newPosition) {\n        this.itemBackup[0] = this.gridsterItem.$item.x;\n        this.itemBackup[2] = this.gridsterItem.$item.cols;\n        this.gridsterItem.$item.cols += this.gridsterItem.$item.x - this.newPosition;\n        this.gridsterItem.$item.x = this.newPosition;\n        this.pushResize.pushItems(this.pushResize.fromEast);\n        this.push.pushItems(this.push.fromEast, this.gridster.$options.disablePushOnResize);\n        if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n          this.gridsterItem.$item.x = this.itemBackup[0];\n          this.gridsterItem.$item.cols = this.itemBackup[2];\n          this.left = this.gridster.positionXToPixels(this.gridsterItem.$item.x);\n          this.setItemLeft(this.gridster.positionXToPixels(this.gridsterItem.$item.x));\n          this.setItemWidth(this.gridster.positionXToPixels(this.gridsterItem.$item.cols) - this.margin);\n          return;\n        } else {\n          this.gridster.previewStyle();\n        }\n        this.pushResize.checkPushBack();\n        this.push.checkPushBack();\n      }\n      this.setItemLeft(this.left);\n      this.setItemWidth(this.width);\n    };\n    this.handleSouth = e => {\n      this.height = e.clientY + this.offsetTop - this.diffBottom - this.top;\n      if (this.minHeight > this.height) {\n        this.height = this.minHeight;\n      }\n      this.bottom = this.top + this.height;\n      if (this.gridster.options.enableBoundaryControl) {\n        const margin = this.outerMarginBottom ?? this.margin;\n        const box = this.gridster.el.getBoundingClientRect();\n        this.bottom = Math.min(this.bottom, box.bottom - box.top - 2 * margin);\n        this.height = this.bottom - this.top;\n      }\n      const marginBottom = this.gridster.options.pushItems ? 0 : this.margin;\n      this.newPosition = this.gridster.pixelsToPositionY(this.bottom + marginBottom, Math.ceil);\n      if (this.gridsterItem.$item.y + this.gridsterItem.$item.rows !== this.newPosition) {\n        this.itemBackup[3] = this.gridsterItem.$item.rows;\n        this.gridsterItem.$item.rows = this.newPosition - this.gridsterItem.$item.y;\n        this.pushResize.pushItems(this.pushResize.fromNorth);\n        this.push.pushItems(this.push.fromNorth, this.gridster.$options.disablePushOnResize);\n        if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n          this.gridsterItem.$item.rows = this.itemBackup[3];\n          this.setItemHeight(this.gridster.positionYToPixels(this.gridsterItem.$item.rows) - this.margin);\n          return;\n        } else {\n          this.gridster.previewStyle();\n        }\n        this.pushResize.checkPushBack();\n        this.push.checkPushBack();\n      }\n      this.setItemHeight(this.height);\n    };\n    this.handleEast = e => {\n      const clientX = this.gridster.$options.dirType === DirTypes.RTL ? this.originalClientX + (this.originalClientX - e.clientX) : e.clientX;\n      this.width = clientX + this.offsetLeft - this.diffRight - this.left;\n      if (this.minWidth > this.width) {\n        this.width = this.minWidth;\n      }\n      this.right = this.left + this.width;\n      if (this.gridster.options.enableBoundaryControl) {\n        const margin = this.outerMarginRight ?? this.margin;\n        const box = this.gridster.el.getBoundingClientRect();\n        this.right = Math.min(this.right, box.right - box.left - 2 * margin);\n        this.width = this.right - this.left;\n      }\n      const marginRight = this.gridster.options.pushItems ? 0 : this.margin;\n      this.newPosition = this.gridster.pixelsToPositionX(this.right + marginRight, Math.ceil);\n      if (this.gridsterItem.$item.x + this.gridsterItem.$item.cols !== this.newPosition) {\n        this.itemBackup[2] = this.gridsterItem.$item.cols;\n        this.gridsterItem.$item.cols = this.newPosition - this.gridsterItem.$item.x;\n        this.pushResize.pushItems(this.pushResize.fromWest);\n        this.push.pushItems(this.push.fromWest, this.gridster.$options.disablePushOnResize);\n        if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n          this.gridsterItem.$item.cols = this.itemBackup[2];\n          this.setItemWidth(this.gridster.positionXToPixels(this.gridsterItem.$item.cols) - this.margin);\n          return;\n        } else {\n          this.gridster.previewStyle();\n        }\n        this.pushResize.checkPushBack();\n        this.push.checkPushBack();\n      }\n      this.setItemWidth(this.width);\n    };\n    this.handleNorthWest = e => {\n      this.handleNorth(e);\n      this.handleWest(e);\n    };\n    this.handleNorthEast = e => {\n      this.handleNorth(e);\n      this.handleEast(e);\n    };\n    this.handleSouthWest = e => {\n      this.handleSouth(e);\n      this.handleWest(e);\n    };\n    this.handleSouthEast = e => {\n      this.handleSouth(e);\n      this.handleEast(e);\n    };\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridster;\n    this.lastMouse = {\n      clientX: 0,\n      clientY: 0\n    };\n    this.itemBackup = [0, 0, 0, 0];\n    this.resizeEventScrollType = {\n      west: false,\n      east: false,\n      north: false,\n      south: false\n    };\n  }\n  destroy() {\n    this.gridster?.previewStyle();\n    this.gridster = this.gridsterItem = null;\n  }\n  dragStart(e) {\n    if (e.which && e.which !== 1) {\n      return;\n    }\n    if (this.gridster.options.resizable && this.gridster.options.resizable.start) {\n      this.gridster.options.resizable.start(this.gridsterItem.item, this.gridsterItem, e);\n    }\n    e.stopPropagation();\n    e.preventDefault();\n    this.zone.runOutsideAngular(() => {\n      this.mousemove = this.gridsterItem.renderer.listen('document', 'mousemove', this.dragMove);\n      this.touchmove = this.gridster.renderer.listen(this.gridster.el, 'touchmove', this.dragMove);\n    });\n    this.mouseup = this.gridsterItem.renderer.listen('document', 'mouseup', this.dragStop);\n    this.mouseleave = this.gridsterItem.renderer.listen('document', 'mouseleave', this.dragStop);\n    this.cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', this.dragStop);\n    this.touchend = this.gridsterItem.renderer.listen('document', 'touchend', this.dragStop);\n    this.touchcancel = this.gridsterItem.renderer.listen('document', 'touchcancel', this.dragStop);\n    this.gridsterItem.renderer.addClass(this.gridsterItem.el, 'gridster-item-resizing');\n    this.lastMouse.clientX = e.clientX;\n    this.lastMouse.clientY = e.clientY;\n    this.left = this.gridsterItem.left;\n    this.top = this.gridsterItem.top;\n    this.originalClientX = e.clientX;\n    this.originalClientY = e.clientY;\n    this.width = this.gridsterItem.width;\n    this.height = this.gridsterItem.height;\n    this.bottom = this.gridsterItem.top + this.gridsterItem.height;\n    this.right = this.gridsterItem.left + this.gridsterItem.width;\n    this.margin = this.gridster.$options.margin;\n    this.outerMarginTop = this.gridster.$options.outerMarginTop;\n    this.outerMarginRight = this.gridster.$options.outerMarginRight;\n    this.outerMarginBottom = this.gridster.$options.outerMarginBottom;\n    this.outerMarginLeft = this.gridster.$options.outerMarginLeft;\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    this.diffLeft = e.clientX + this.offsetLeft - this.left;\n    this.diffRight = e.clientX + this.offsetLeft - this.right;\n    this.diffTop = e.clientY + this.offsetTop - this.top;\n    this.diffBottom = e.clientY + this.offsetTop - this.bottom;\n    this.minHeight = this.gridster.positionYToPixels(this.gridsterItem.$item.minItemRows || this.gridster.$options.minItemRows) - this.margin;\n    this.minWidth = this.gridster.positionXToPixels(this.gridsterItem.$item.minItemCols || this.gridster.$options.minItemCols) - this.margin;\n    this.gridster.movingItem = this.gridsterItem.$item;\n    this.gridster.previewStyle();\n    this.push = new GridsterPush(this.gridsterItem);\n    this.pushResize = new GridsterPushResize(this.gridsterItem);\n    this.gridster.dragInProgress = true;\n    this.gridster.updateGrid();\n    const {\n      classList\n    } = e.target;\n    if (classList.contains('handle-n')) {\n      this.resizeEventScrollType.north = true;\n      this.directionFunction = this.handleNorth;\n    } else if (classList.contains('handle-w')) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.east = true;\n        this.directionFunction = this.handleEast;\n      } else {\n        this.resizeEventScrollType.west = true;\n        this.directionFunction = this.handleWest;\n      }\n    } else if (classList.contains('handle-s')) {\n      this.resizeEventScrollType.south = true;\n      this.directionFunction = this.handleSouth;\n    } else if (classList.contains('handle-e')) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.west = true;\n        this.directionFunction = this.handleWest;\n      } else {\n        this.resizeEventScrollType.east = true;\n        this.directionFunction = this.handleEast;\n      }\n    } else if (classList.contains('handle-nw')) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.north = true;\n        this.resizeEventScrollType.east = true;\n        this.directionFunction = this.handleNorthEast;\n      } else {\n        this.resizeEventScrollType.north = true;\n        this.resizeEventScrollType.west = true;\n        this.directionFunction = this.handleNorthWest;\n      }\n    } else if (classList.contains('handle-ne')) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.north = true;\n        this.resizeEventScrollType.west = true;\n        this.directionFunction = this.handleNorthWest;\n      } else {\n        this.resizeEventScrollType.north = true;\n        this.resizeEventScrollType.east = true;\n        this.directionFunction = this.handleNorthEast;\n      }\n    } else if (classList.contains('handle-sw')) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.south = true;\n        this.resizeEventScrollType.east = true;\n        this.directionFunction = this.handleSouthEast;\n      } else {\n        this.resizeEventScrollType.south = true;\n        this.resizeEventScrollType.west = true;\n        this.directionFunction = this.handleSouthWest;\n      }\n    } else if (classList.contains('handle-se')) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.south = true;\n        this.resizeEventScrollType.west = true;\n        this.directionFunction = this.handleSouthWest;\n      } else {\n        this.resizeEventScrollType.south = true;\n        this.resizeEventScrollType.east = true;\n        this.directionFunction = this.handleSouthEast;\n      }\n    }\n  }\n  toggle() {\n    this.resizeEnabled = this.gridsterItem.canBeResized();\n    this.resizableHandles = this.gridsterItem.getResizableHandles();\n  }\n  dragStartDelay(e) {\n    GridsterUtils.checkTouchEvent(e);\n    if (!this.gridster.$options.resizable.delayStart) {\n      this.dragStart(e);\n      return;\n    }\n    const timeout = setTimeout(() => {\n      this.dragStart(e);\n      cancelDrag();\n    }, this.gridster.$options.resizable.delayStart);\n    const {\n      cancelMouse,\n      cancelMouseLeave,\n      cancelOnBlur,\n      cancelTouchMove,\n      cancelTouchEnd,\n      cancelTouchCancel\n    } = this.zone.runOutsideAngular(() => {\n      // Note: all of these events are being added within the `<root>` zone since they all\n      // don't do any view updates and don't require Angular running change detection.\n      // All event listeners call `cancelDrag` once the event is dispatched, the `cancelDrag`\n      // is responsible only for removing event listeners.\n      const cancelMouse = this.gridsterItem.renderer.listen('document', 'mouseup', cancelDrag);\n      const cancelMouseLeave = this.gridsterItem.renderer.listen('document', 'mouseleave', cancelDrag);\n      const cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', cancelDrag);\n      const cancelTouchMove = this.gridsterItem.renderer.listen('document', 'touchmove', cancelMove);\n      const cancelTouchEnd = this.gridsterItem.renderer.listen('document', 'touchend', cancelDrag);\n      const cancelTouchCancel = this.gridsterItem.renderer.listen('document', 'touchcancel', cancelDrag);\n      return {\n        cancelMouse,\n        cancelMouseLeave,\n        cancelOnBlur,\n        cancelTouchMove,\n        cancelTouchEnd,\n        cancelTouchCancel\n      };\n    });\n    function cancelMove(eventMove) {\n      GridsterUtils.checkTouchEvent(eventMove);\n      if (Math.abs(eventMove.clientX - e.clientX) > 9 || Math.abs(eventMove.clientY - e.clientY) > 9) {\n        cancelDrag();\n      }\n    }\n    function cancelDrag() {\n      clearTimeout(timeout);\n      cancelOnBlur();\n      cancelMouse();\n      cancelMouseLeave();\n      cancelTouchMove();\n      cancelTouchEnd();\n      cancelTouchCancel();\n    }\n  }\n  setItemTop(top) {\n    this.gridster.gridRenderer.setCellPosition(this.gridsterItem.renderer, this.gridsterItem.el, this.left, top);\n  }\n  setItemLeft(left) {\n    this.gridster.gridRenderer.setCellPosition(this.gridsterItem.renderer, this.gridsterItem.el, left, this.top);\n  }\n  setItemHeight(height) {\n    this.gridsterItem.renderer.setStyle(this.gridsterItem.el, 'height', height + 'px');\n  }\n  setItemWidth(width) {\n    this.gridsterItem.renderer.setStyle(this.gridsterItem.el, 'width', width + 'px');\n  }\n}\nclass GridsterItemComponent {\n  get zIndex() {\n    return this.getLayerIndex() + this.gridster.$options.baseLayerIndex;\n  }\n  constructor(el, gridster, renderer, zone) {\n    this.renderer = renderer;\n    this.zone = zone;\n    this.itemInit = new EventEmitter();\n    this.itemChange = new EventEmitter();\n    this.itemResize = new EventEmitter();\n    this.el = el.nativeElement;\n    this.$item = {\n      cols: -1,\n      rows: -1,\n      x: -1,\n      y: -1\n    };\n    this.gridster = gridster;\n    this.drag = new GridsterDraggable(this, gridster, this.zone);\n    this.resize = new GridsterResizable(this, gridster, this.zone);\n  }\n  ngOnInit() {\n    this.gridster.addItem(this);\n  }\n  ngOnChanges(changes) {\n    if (changes.item) {\n      this.updateOptions();\n      if (!this.init) {\n        this.gridster.calculateLayout$.next();\n      }\n    }\n    if (changes.item && changes.item.previousValue) {\n      this.setSize();\n    }\n  }\n  updateOptions() {\n    this.$item = GridsterUtils.merge(this.$item, this.item, {\n      cols: undefined,\n      rows: undefined,\n      x: undefined,\n      y: undefined,\n      layerIndex: undefined,\n      dragEnabled: undefined,\n      resizeEnabled: undefined,\n      compactEnabled: undefined,\n      maxItemRows: undefined,\n      minItemRows: undefined,\n      maxItemCols: undefined,\n      minItemCols: undefined,\n      maxItemArea: undefined,\n      minItemArea: undefined,\n      resizableHandles: {\n        s: undefined,\n        e: undefined,\n        n: undefined,\n        w: undefined,\n        se: undefined,\n        ne: undefined,\n        sw: undefined,\n        nw: undefined\n      }\n    });\n  }\n  ngOnDestroy() {\n    this.gridster.removeItem(this);\n    this.drag.destroy();\n    this.resize.destroy();\n    this.gridster = this.drag = this.resize = null;\n  }\n  setSize() {\n    this.renderer.setStyle(this.el, 'display', this.notPlaced ? '' : 'block');\n    this.gridster.gridRenderer.updateItem(this.el, this.$item, this.renderer);\n    this.updateItemSize();\n  }\n  updateItemSize() {\n    const top = this.$item.y * this.gridster.curRowHeight;\n    const left = this.$item.x * this.gridster.curColWidth;\n    const width = this.$item.cols * this.gridster.curColWidth - this.gridster.$options.margin;\n    const height = this.$item.rows * this.gridster.curRowHeight - this.gridster.$options.margin;\n    this.top = top;\n    this.left = left;\n    if (!this.init && width > 0 && height > 0) {\n      this.init = true;\n      if (this.item.initCallback) {\n        this.item.initCallback(this.item, this);\n      }\n      if (this.gridster.options.itemInitCallback) {\n        this.gridster.options.itemInitCallback(this.item, this);\n      }\n      this.itemInit.next({\n        item: this.item,\n        itemComponent: this\n      });\n      if (this.gridster.$options.scrollToNewItems) {\n        this.el.scrollIntoView(false);\n      }\n    }\n    if (width !== this.width || height !== this.height) {\n      this.width = width;\n      this.height = height;\n      if (this.gridster.options.itemResizeCallback) {\n        this.gridster.options.itemResizeCallback(this.item, this);\n      }\n      this.itemResize.next({\n        item: this.item,\n        itemComponent: this\n      });\n    }\n  }\n  itemChanged() {\n    if (this.gridster.options.itemChangeCallback) {\n      this.gridster.options.itemChangeCallback(this.item, this);\n    }\n    this.itemChange.next({\n      item: this.item,\n      itemComponent: this\n    });\n  }\n  checkItemChanges(newValue, oldValue) {\n    if (newValue.rows === oldValue.rows && newValue.cols === oldValue.cols && newValue.x === oldValue.x && newValue.y === oldValue.y) {\n      return;\n    }\n    if (this.gridster.checkCollision(this.$item)) {\n      this.$item.x = oldValue.x || 0;\n      this.$item.y = oldValue.y || 0;\n      this.$item.cols = oldValue.cols || 1;\n      this.$item.rows = oldValue.rows || 1;\n      this.setSize();\n    } else {\n      this.item.cols = this.$item.cols;\n      this.item.rows = this.$item.rows;\n      this.item.x = this.$item.x;\n      this.item.y = this.$item.y;\n      this.gridster.calculateLayout$.next();\n      this.itemChanged();\n    }\n  }\n  canBeDragged() {\n    const gridDragEnabled = this.gridster.$options.draggable.enabled;\n    const itemDragEnabled = this.$item.dragEnabled === undefined ? gridDragEnabled : this.$item.dragEnabled;\n    return !this.gridster.mobile && gridDragEnabled && itemDragEnabled;\n  }\n  canBeResized() {\n    const gridResizable = this.gridster.$options.resizable.enabled;\n    const itemResizable = this.$item.resizeEnabled === undefined ? gridResizable : this.$item.resizeEnabled;\n    return !this.gridster.mobile && gridResizable && itemResizable;\n  }\n  getResizableHandles() {\n    const gridResizableHandles = this.gridster.$options.resizable.handles;\n    const itemResizableHandles = this.$item.resizableHandles;\n    // use grid settings if no settings are provided for the item.\n    if (itemResizableHandles === undefined) {\n      return gridResizableHandles;\n    }\n    // else merge the settings\n    return {\n      ...gridResizableHandles,\n      ...itemResizableHandles\n    };\n  }\n  bringToFront(offset) {\n    if (offset && offset <= 0) {\n      return;\n    }\n    const layerIndex = this.getLayerIndex();\n    const topIndex = this.gridster.$options.maxLayerIndex;\n    if (layerIndex < topIndex) {\n      const targetIndex = offset ? layerIndex + offset : topIndex;\n      this.item.layerIndex = this.$item.layerIndex = targetIndex > topIndex ? topIndex : targetIndex;\n    }\n  }\n  sendToBack(offset) {\n    if (offset && offset <= 0) {\n      return;\n    }\n    const layerIndex = this.getLayerIndex();\n    if (layerIndex > 0) {\n      const targetIndex = offset ? layerIndex - offset : 0;\n      this.item.layerIndex = this.$item.layerIndex = targetIndex < 0 ? 0 : targetIndex;\n    }\n  }\n  getLayerIndex() {\n    if (this.item.layerIndex !== undefined) {\n      return this.item.layerIndex;\n    }\n    if (this.gridster.$options.defaultLayerIndex !== undefined) {\n      return this.gridster.$options.defaultLayerIndex;\n    }\n    return 0;\n  }\n  static {\n    this.ɵfac = function GridsterItemComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || GridsterItemComponent)(i0.ɵɵdirectiveInject(ElementRef), i0.ɵɵdirectiveInject(GridsterComponent), i0.ɵɵdirectiveInject(Renderer2), i0.ɵɵdirectiveInject(NgZone));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: GridsterItemComponent,\n      selectors: [[\"gridster-item\"]],\n      hostVars: 2,\n      hostBindings: function GridsterItemComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"z-index\", ctx.zIndex);\n        }\n      },\n      inputs: {\n        item: \"item\"\n      },\n      outputs: {\n        itemInit: \"itemInit\",\n        itemChange: \"itemChange\",\n        itemResize: \"itemResize\"\n      },\n      standalone: true,\n      features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c0,\n      decls: 9,\n      vars: 8,\n      consts: [[1, \"gridster-item-resizable-handler\", \"handle-s\"], [1, \"gridster-item-resizable-handler\", \"handle-e\"], [1, \"gridster-item-resizable-handler\", \"handle-n\"], [1, \"gridster-item-resizable-handler\", \"handle-w\"], [1, \"gridster-item-resizable-handler\", \"handle-se\"], [1, \"gridster-item-resizable-handler\", \"handle-ne\"], [1, \"gridster-item-resizable-handler\", \"handle-sw\"], [1, \"gridster-item-resizable-handler\", \"handle-nw\"], [1, \"gridster-item-resizable-handler\", \"handle-s\", 3, \"mousedown\", \"touchstart\"], [1, \"gridster-item-resizable-handler\", \"handle-e\", 3, \"mousedown\", \"touchstart\"], [1, \"gridster-item-resizable-handler\", \"handle-n\", 3, \"mousedown\", \"touchstart\"], [1, \"gridster-item-resizable-handler\", \"handle-w\", 3, \"mousedown\", \"touchstart\"], [1, \"gridster-item-resizable-handler\", \"handle-se\", 3, \"mousedown\", \"touchstart\"], [1, \"gridster-item-resizable-handler\", \"handle-ne\", 3, \"mousedown\", \"touchstart\"], [1, \"gridster-item-resizable-handler\", \"handle-sw\", 3, \"mousedown\", \"touchstart\"], [1, \"gridster-item-resizable-handler\", \"handle-nw\", 3, \"mousedown\", \"touchstart\"]],\n      template: function GridsterItemComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n          i0.ɵɵtemplate(1, GridsterItemComponent_Conditional_1_Template, 1, 0, \"div\", 0)(2, GridsterItemComponent_Conditional_2_Template, 1, 0, \"div\", 1)(3, GridsterItemComponent_Conditional_3_Template, 1, 0, \"div\", 2)(4, GridsterItemComponent_Conditional_4_Template, 1, 0, \"div\", 3)(5, GridsterItemComponent_Conditional_5_Template, 1, 0, \"div\", 4)(6, GridsterItemComponent_Conditional_6_Template, 1, 0, \"div\", 5)(7, GridsterItemComponent_Conditional_7_Template, 1, 0, \"div\", 6)(8, GridsterItemComponent_Conditional_8_Template, 1, 0, \"div\", 7);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵconditional((ctx.resize.resizableHandles == null ? null : ctx.resize.resizableHandles.s) && ctx.resize.resizeEnabled ? 1 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional((ctx.resize.resizableHandles == null ? null : ctx.resize.resizableHandles.e) && ctx.resize.resizeEnabled ? 2 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional((ctx.resize.resizableHandles == null ? null : ctx.resize.resizableHandles.n) && ctx.resize.resizeEnabled ? 3 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional((ctx.resize.resizableHandles == null ? null : ctx.resize.resizableHandles.w) && ctx.resize.resizeEnabled ? 4 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional((ctx.resize.resizableHandles == null ? null : ctx.resize.resizableHandles.se) && ctx.resize.resizeEnabled ? 5 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional((ctx.resize.resizableHandles == null ? null : ctx.resize.resizableHandles.ne) && ctx.resize.resizeEnabled ? 6 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional((ctx.resize.resizableHandles == null ? null : ctx.resize.resizableHandles.sw) && ctx.resize.resizeEnabled ? 7 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional((ctx.resize.resizableHandles == null ? null : ctx.resize.resizableHandles.nw) && ctx.resize.resizeEnabled ? 8 : -1);\n        }\n      },\n      styles: [\"gridster-item{box-sizing:border-box;z-index:1;position:absolute;overflow:hidden;transition:.3s;display:none;background:#fff;-webkit-user-select:text;user-select:text}gridster-item.gridster-item-moving{cursor:move}gridster-item.gridster-item-resizing,gridster-item.gridster-item-moving{transition:0s;z-index:2;box-shadow:0 0 5px 5px #0003,0 6px 10px #00000024,0 1px 18px #0000001f}.gridster-item-resizable-handler{position:absolute;z-index:2}.gridster-item-resizable-handler.handle-n{cursor:ns-resize;height:10px;right:0;top:0;left:0}.gridster-item-resizable-handler.handle-e{cursor:ew-resize;width:10px;bottom:0;right:0;top:0}.gridster-item-resizable-handler.handle-s{cursor:ns-resize;height:10px;right:0;bottom:0;left:0}.gridster-item-resizable-handler.handle-w{cursor:ew-resize;width:10px;left:0;top:0;bottom:0}.gridster-item-resizable-handler.handle-ne{cursor:ne-resize;width:10px;height:10px;right:0;top:0}.gridster-item-resizable-handler.handle-nw{cursor:nw-resize;width:10px;height:10px;left:0;top:0}.gridster-item-resizable-handler.handle-se{cursor:se-resize;width:0;height:0;right:0;bottom:0;border-style:solid;border-width:0 0 10px 10px;border-color:transparent}.gridster-item-resizable-handler.handle-sw{cursor:sw-resize;width:10px;height:10px;left:0;bottom:0}gridster-item:hover .gridster-item-resizable-handler.handle-se{border-color:transparent transparent #ccc}\\n\"],\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridsterItemComponent, [{\n    type: Component,\n    args: [{\n      selector: 'gridster-item',\n      encapsulation: ViewEncapsulation.None,\n      standalone: true,\n      template: \"<ng-content></ng-content>\\n@if (resize.resizableHandles?.s && resize.resizeEnabled) {\\n<div\\n  (mousedown)=\\\"resize.dragStartDelay($event)\\\"\\n  (touchstart)=\\\"resize.dragStartDelay($event)\\\"\\n  class=\\\"gridster-item-resizable-handler handle-s\\\"\\n></div>\\n} @if (resize.resizableHandles?.e && resize.resizeEnabled) {\\n<div\\n  (mousedown)=\\\"resize.dragStartDelay($event)\\\"\\n  (touchstart)=\\\"resize.dragStartDelay($event)\\\"\\n  class=\\\"gridster-item-resizable-handler handle-e\\\"\\n></div>\\n} @if (resize.resizableHandles?.n && resize.resizeEnabled) {\\n<div\\n  (mousedown)=\\\"resize.dragStartDelay($event)\\\"\\n  (touchstart)=\\\"resize.dragStartDelay($event)\\\"\\n  class=\\\"gridster-item-resizable-handler handle-n\\\"\\n></div>\\n} @if (resize.resizableHandles?.w && resize.resizeEnabled) {\\n<div\\n  (mousedown)=\\\"resize.dragStartDelay($event)\\\"\\n  (touchstart)=\\\"resize.dragStartDelay($event)\\\"\\n  class=\\\"gridster-item-resizable-handler handle-w\\\"\\n></div>\\n} @if (resize.resizableHandles?.se && resize.resizeEnabled) {\\n<div\\n  (mousedown)=\\\"resize.dragStartDelay($event)\\\"\\n  (touchstart)=\\\"resize.dragStartDelay($event)\\\"\\n  class=\\\"gridster-item-resizable-handler handle-se\\\"\\n></div>\\n} @if (resize.resizableHandles?.ne && resize.resizeEnabled) {\\n<div\\n  (mousedown)=\\\"resize.dragStartDelay($event)\\\"\\n  (touchstart)=\\\"resize.dragStartDelay($event)\\\"\\n  class=\\\"gridster-item-resizable-handler handle-ne\\\"\\n></div>\\n} @if (resize.resizableHandles?.sw && resize.resizeEnabled) {\\n<div\\n  (mousedown)=\\\"resize.dragStartDelay($event)\\\"\\n  (touchstart)=\\\"resize.dragStartDelay($event)\\\"\\n  class=\\\"gridster-item-resizable-handler handle-sw\\\"\\n></div>\\n} @if (resize.resizableHandles?.nw && resize.resizeEnabled) {\\n<div\\n  (mousedown)=\\\"resize.dragStartDelay($event)\\\"\\n  (touchstart)=\\\"resize.dragStartDelay($event)\\\"\\n  class=\\\"gridster-item-resizable-handler handle-nw\\\"\\n></div>\\n}\\n\",\n      styles: [\"gridster-item{box-sizing:border-box;z-index:1;position:absolute;overflow:hidden;transition:.3s;display:none;background:#fff;-webkit-user-select:text;user-select:text}gridster-item.gridster-item-moving{cursor:move}gridster-item.gridster-item-resizing,gridster-item.gridster-item-moving{transition:0s;z-index:2;box-shadow:0 0 5px 5px #0003,0 6px 10px #00000024,0 1px 18px #0000001f}.gridster-item-resizable-handler{position:absolute;z-index:2}.gridster-item-resizable-handler.handle-n{cursor:ns-resize;height:10px;right:0;top:0;left:0}.gridster-item-resizable-handler.handle-e{cursor:ew-resize;width:10px;bottom:0;right:0;top:0}.gridster-item-resizable-handler.handle-s{cursor:ns-resize;height:10px;right:0;bottom:0;left:0}.gridster-item-resizable-handler.handle-w{cursor:ew-resize;width:10px;left:0;top:0;bottom:0}.gridster-item-resizable-handler.handle-ne{cursor:ne-resize;width:10px;height:10px;right:0;top:0}.gridster-item-resizable-handler.handle-nw{cursor:nw-resize;width:10px;height:10px;left:0;top:0}.gridster-item-resizable-handler.handle-se{cursor:se-resize;width:0;height:0;right:0;bottom:0;border-style:solid;border-width:0 0 10px 10px;border-color:transparent}.gridster-item-resizable-handler.handle-sw{cursor:sw-resize;width:10px;height:10px;left:0;bottom:0}gridster-item:hover .gridster-item-resizable-handler.handle-se{border-color:transparent transparent #ccc}\\n\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef,\n    decorators: [{\n      type: Inject,\n      args: [ElementRef]\n    }]\n  }, {\n    type: GridsterComponent\n  }, {\n    type: i0.Renderer2,\n    decorators: [{\n      type: Inject,\n      args: [Renderer2]\n    }]\n  }, {\n    type: i0.NgZone,\n    decorators: [{\n      type: Inject,\n      args: [NgZone]\n    }]\n  }], {\n    item: [{\n      type: Input\n    }],\n    itemInit: [{\n      type: Output\n    }],\n    itemChange: [{\n      type: Output\n    }],\n    itemResize: [{\n      type: Output\n    }],\n    zIndex: [{\n      type: HostBinding,\n      args: ['style.z-index']\n    }]\n  });\n})();\nclass GridsterItemComponentInterface {}\nclass GridsterComponentInterface {}\nclass GridsterModule {\n  static {\n    this.ɵfac = function GridsterModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || GridsterModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: GridsterModule,\n      imports: [GridsterComponent, GridsterItemComponent],\n      exports: [GridsterComponent, GridsterItemComponent]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridsterModule, [{\n    type: NgModule,\n    args: [{\n      imports: [GridsterComponent, GridsterItemComponent],\n      exports: [GridsterComponent, GridsterItemComponent]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of gridster\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CompactType, DirTypes, DisplayGrid, GridType, GridsterComponent, GridsterComponentInterface, GridsterConfigService, GridsterItemComponent, GridsterItemComponentInterface, GridsterModule, GridsterPush, GridsterPushResize, GridsterSwap };\n"],
  "mappings": "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",
  "names": ["GridType", "DisplayGrid", "CompactType", "DirTypes", "Direction", "cancelMouse", "cancelMouseLeave", "cancelOnBlur", "cancelTouchMove", "cancelTouchEnd", "cancelTouchCancel"]
}
