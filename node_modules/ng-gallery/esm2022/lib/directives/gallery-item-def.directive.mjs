import { Directive } from '@angular/core';
import * as i0 from "@angular/core";
class GalleryItemDef {
    constructor(templateRef) {
        this.templateRef = templateRef;
    }
    // Make sure the template checker knows the type of the context with which the
    // template of this directive will be rendered
    static ngTemplateContextGuard(directive, context) {
        return true;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.1", ngImport: i0, type: GalleryItemDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.1.1", type: GalleryItemDef, isStandalone: true, selector: "[galleryItemDef]", ngImport: i0 }); }
}
export { GalleryItemDef };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.1", ngImport: i0, type: GalleryItemDef, decorators: [{
            type: Directive,
            args: [{
                    standalone: true,
                    selector: '[galleryItemDef]'
                }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FsbGVyeS1pdGVtLWRlZi5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1nYWxsZXJ5L3NyYy9saWIvZGlyZWN0aXZlcy9nYWxsZXJ5LWl0ZW0tZGVmLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFlLE1BQU0sZUFBZSxDQUFDOztBQUl2RCxNQUlhLGNBQWM7SUFDekIsWUFBbUIsV0FBNEQ7UUFBNUQsZ0JBQVcsR0FBWCxXQUFXLENBQWlEO0lBQy9FLENBQUM7SUFFRCw4RUFBOEU7SUFDOUUsOENBQThDO0lBQzlDLE1BQU0sQ0FBQyxzQkFBc0IsQ0FDM0IsU0FBeUIsRUFDekIsT0FBZ0I7UUFFaEIsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDOzhHQVhVLGNBQWM7a0dBQWQsY0FBYzs7U0FBZCxjQUFjOzJGQUFkLGNBQWM7a0JBSjFCLFNBQVM7bUJBQUM7b0JBQ1QsVUFBVSxFQUFFLElBQUk7b0JBQ2hCLFFBQVEsRUFBRSxrQkFBa0I7aUJBQzdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBHYWxsZXJ5SXRlbURhdGEgfSBmcm9tICcuLi9jb21wb25lbnRzL3RlbXBsYXRlcy9pdGVtcy5tb2RlbCc7XHJcbmltcG9ydCB7IEdhbGxlcnlJdGVtVHlwZSB9IGZyb20gJy4uL21vZGVscy9jb25zdGFudHMnO1xyXG5cclxuQERpcmVjdGl2ZSh7XHJcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcclxuICBzZWxlY3RvcjogJ1tnYWxsZXJ5SXRlbURlZl0nXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBHYWxsZXJ5SXRlbURlZiB7XHJcbiAgY29uc3RydWN0b3IocHVibGljIHRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxHYWxsZXJ5SXRlbUNvbnRleHQ8R2FsbGVyeUl0ZW1EZWY+Pikge1xyXG4gIH1cclxuXHJcbiAgLy8gTWFrZSBzdXJlIHRoZSB0ZW1wbGF0ZSBjaGVja2VyIGtub3dzIHRoZSB0eXBlIG9mIHRoZSBjb250ZXh0IHdpdGggd2hpY2ggdGhlXHJcbiAgLy8gdGVtcGxhdGUgb2YgdGhpcyBkaXJlY3RpdmUgd2lsbCBiZSByZW5kZXJlZFxyXG4gIHN0YXRpYyBuZ1RlbXBsYXRlQ29udGV4dEd1YXJkKFxyXG4gICAgZGlyZWN0aXZlOiBHYWxsZXJ5SXRlbURlZixcclxuICAgIGNvbnRleHQ6IHVua25vd25cclxuICApOiBjb250ZXh0IGlzIEdhbGxlcnlJdGVtQ29udGV4dDxHYWxsZXJ5SXRlbURhdGE+IHtcclxuICAgIHJldHVybiB0cnVlO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBHYWxsZXJ5SXRlbUNvbnRleHQ8VD4ge1xyXG4gIC8qKiBEYXRhIGZvciB0aGUgcm93IHRoYXQgdGhpcyBjZWxsIGlzIGxvY2F0ZWQgd2l0aGluLiAqL1xyXG4gICRpbXBsaWNpdD86IFQ7XHJcblxyXG4gIC8qKiBJbmRleCBvZiB0aGUgaXRlbS4gKi9cclxuICBpbmRleD86IG51bWJlcjtcclxuXHJcbiAgLyoqIFRoZSB0eXBlIG9mIHRoZSBpdGVtLiAqL1xyXG4gIHR5cGU/OiBHYWxsZXJ5SXRlbVR5cGU7XHJcblxyXG4gIC8qKiBUcnVlIGlmIHRoaXMgaXRlbSBpcyB0aGUgYWN0aXZlIG9uZS4gKi9cclxuICBhY3RpdmU/OiBib29sZWFuO1xyXG5cclxuICAvKiogVGhlIG51bWJlciBvZiB0b3RhbCBpdGVtcy4gKi9cclxuICBjb3VudD86IG51bWJlcjtcclxuXHJcbiAgLyoqIFRydWUgaWYgdGhpcyBpdGVtIGlzIGZpcnN0LiAqL1xyXG4gIGZpcnN0PzogYm9vbGVhbjtcclxuXHJcbiAgLyoqIFRydWUgaWYgdGhpcyBpdGVtIGlzIGxhc3QuICovXHJcbiAgbGFzdD86IGJvb2xlYW47XHJcbn1cclxuIl19